<?xml version="1.0" encoding="utf-8"?>
<panel ctrlrMenuBarBackgroundColour1="fff7f7f7"
       ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrMenuBarHighlightColour="ff4364ff"
       ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarTextColour="ff000000"
       ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuItemHighlightColour="ff4364ff"
       ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemSeparatorColour="44000000"
       ctrlrMenuItemTextColour="ff000000"
       ctrlrUseEditorWrapper="0"
       luaPanelBeforeLoad="-- None"
       luaPanelGlobalChanged="-- None"
       luaPanelLoaded="-- None"
       luaPanelMessageHandler="-- None"
       luaPanelMidiChannelChanged="-- None"
       luaPanelMidiReceived="-- None"
       luaPanelMidiSnapshotPost="-- None"
       luaPanelMidiSnapshotPre="-- None"
       luaPanelModulatorValueChanged="-- None"
       luaPanelProgramChanged="-- None"
       luaPanelResourcesLoaded="-- None"
       luaPanelRestoreState="-- None"
       luaPanelSaveState="-- None"
       luaPanelSaved="-- None"
       name="Yamaha CS1x"
       panelAuthorDesc=""
       panelAuthorEmail="packe01@gmail.com"
       panelAuthorName="Pascal Collberg"
       panelAuthorUrl=""
       panelDevice="Yamaha CS1x"
       panelFilePath="C:\ctrlr\Panels\pascalc\Yamaha - CS1x_1_0_Hell-O-Kitty_2015-04-03_20-39.panel"
       panelGlobalVariables="-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1"
       panelIndex="0"
       panelInstanceManufacturerID="2trQ"
       panelInstanceUID="iizs"
       panelMessageTime="10000"
       panelMidiBankLsb="0"
       panelMidiBankMsb="0"
       panelMidiControllerChannelDevice="1"
       panelMidiControllerDevice="-- None"
       panelMidiGlobalDelay="0"
       panelMidiInputChannelDevice="1"
       panelMidiInputChannelHost="1"
       panelMidiInputDevice="-- None"
       panelMidiInputFromHost="0"
       panelMidiInputThreadPriority="7"
       panelMidiMatchCacheSize="32"
       panelMidiOutputChannelDevice="1"
       panelMidiOutputChannelHost="1"
       panelMidiOutputDevice="-- None"
       panelMidiOutputToHost="0"
       panelMidiPauseIn="0"
       panelMidiPauseOut="0"
       panelMidiProgram="0"
       panelMidiProgramCalloutOnprogramChange="0"
       panelMidiRealtimeIgnore="1"
       panelMidiSendProgramChangeOnLoad="0"
       panelMidiSnapshotAfterLoad="0"
       panelMidiSnapshotAfterProgramChange="0"
       panelMidiSnapshotDelay="10"
       panelMidiSnapshotShowProgress="0"
       panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0"
       panelMidiThruD2H="0"
       panelMidiThruD2HChannelize="0"
       panelMidiThruH2D="0"
       panelMidiThruH2DChannelize="0"
       panelMidiThruH2H="0"
       panelMidiThruH2HChannelize="0"
       panelModulatorListColumns="-- None"
       panelModulatorListCsvDelimiter=","
       panelModulatorListSortOption="1"
       panelModulatorListXmlModulator="ctrlrModulator"
       panelModulatorListXmlRoot="ctrlrModulatorList"
       panelPropertyDisplayIDs="0"
       panelResources="-- None"
       panelShowDialogs="1"
       panelUID="8.QlJdDxHAVa."
       panelVendor=""
       panelVersionMajor="1"
       panelVersionMinor="0"
       panelVersionName="Hell-O-Kitty">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor"
                   uiChildWindowState="fs 400 180 800 500">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;

&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;0&quot;&gt;
  &lt;SELECTED id=&quot;/LUA/createEffectParameterDefinitions&quot;/&gt;
&lt;/OPEN&gt;
;c98fa6723d884c98ac61f65ff3154706:beeb6a1b788343aeb7533304841c5ad5" />
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary luaTransInfo="-- None"
               midiLibraryCustomRequests=""
               midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S"
               midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryMidiProgramChangeControl="0"
               midiLibraryParameterIndexProperty="modulatorCustomIndex"
               midiLibrarySendSnapAfterPChg="0"
               uuid="9b56eded75224a43b7e51bb2d80719d4">
    <midiLibrarySnapshots name="Snapshots" />
    <midiLibraryFirmware name="Firmware" />
    <midiLibraryEditBuffer name="Edit buffer" />
    <midiLibraryTransactions name="Transactions">
      <trans enabled="1"
             internal="1"
             name="Request Identity"
             timeout="1000"
             transCap="midiLibrary"
             transConfExists="0"
             transReqDataLen="0"
             transReqExists="1"
             transReqFormulaPrefix="F0 7E 7F 06 01"
             transReqFormulaSuffix="F7"
             transRespDataCheck="1"
             transRespDataLen="8"
             transRespExists="1"
             transRespFormulaPrefix="F0 7E 7F 06 02"
             transRespFormulaSuffix="F7"
             transRespSizeCheck="0" />
      <trans enabled="1"
             internal="1"
             luaTransProcess="transIdProc"
             luaTransRequest="transIdReq"
             name="Request Identity [LUA]"
             timeout="1000"
             transCap="midiLibrary"
             transConfExists="0"
             transReqDataLen="0"
             transReqExists="1"
             transReqFormulaPrefix=""
             transReqFormulaSuffix=""
             transRespDataCheck="0"
             transRespDataLen="8"
             transRespExists="1"
             transRespFormulaPrefix=""
             transRespFormulaSuffix=""
             transRespSizeCheck="0" />
      <trans enabled="1"
             internal="1"
             luaTransRequest="transSYXSendReq"
             name="Send SYX file"
             timeout="1000"
             transCap="midiLibrary"
             transConfExists="0"
             transReqDataLen="0"
             transReqExists="1"
             transReqFormulaPrefix=""
             transReqFormulaSuffix=""
             transRespDataCheck="0"
             transRespDataLen="0"
             transRespExists="0"
             transRespFormulaPrefix=""
             transRespFormulaSuffix="" />
      <trans enabled="1"
             internal="1"
             luaTransProcess="transSYXRcvProc"
             luaTransRequest="transSYXRcvReq"
             name="Recieve SYX file"
             timeout="1000"
             transCap="midiLibrary"
             transConfExists="0"
             transReqDataLen="0"
             transReqExists="1"
             transReqFormulaPrefix=""
             transReqFormulaSuffix=""
             transRespDataCheck="0"
             transRespDataLen="0"
             transRespExists="1"
             transRespFormulaPrefix=""
             transRespFormulaSuffix="" />
    </midiLibraryTransactions>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In"
                      uuid="915b1f7b453d42fe8a3d74c508588009">
        <luaMethod luaMethodCode="-- @1.1
--
-- Print table contents
--
function table_dump(table)
	for key,value in ipairs(table) do
		_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)

		if (type(value) == &quot;table&quot;) then
			table_dump(value)
		elseif (type(value) == &quot;nil&quot;) then
			_DBG (&quot; = NIL&quot;)
		else
			what (value)
		end
	end
end"
                   luaMethodLinkedProperty=""
                   luaMethodName="table_dump"
                   luaMethodSource="0"
                   luaMethodValid="1"
                   uuid="00000000000000000000000000000001" />
        <luaMethod luaMethodCode="-- @1.1
--
-- Print methods for an object
--
function what(o)
	info = class_info(o)
	if info ~= nil then
		ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;

		if info.name == &quot;table&quot; then
			table_dump(o)
		end

		for k, v in pairs(info.methods) do
			ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))
		end
		ret = ret .. &quot;\n\nAttributes:\n&quot;
		for k, v in pairs(info.attributes) do
			ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))
		end
		ret = ret .. &quot;\n-----------------------------------------------------------------&quot;
	end

	_DBG (ret)
	return ret
end"
                   luaMethodLinkedProperty=""
                   luaMethodName="what"
                   luaMethodSource="0"
                   luaMethodValid="1"
                   uuid="00000000000000000000000000000002" />
        <luaMethod luaMethodCode="-- @1.1
--
-- Print all available classes
--
function how()
	ret = &quot;Available classes:\n&quot;
	ret = ret .. &quot;\n-----------------------------------------------------------------&quot;
	for i,v in ipairs(class_names()) do
		ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;
	end
	ret = ret .. &quot;\n-----------------------------------------------------------------&quot;
	_DBG (ret)
	return ret
end"
                   luaMethodLinkedProperty=""
                   luaMethodName="how"
                   luaMethodSource="0"
                   luaMethodValid="1"
                   uuid="00000000000000000000000000000003" />
        <luaMethod luaMethodCode="-----------------------------------------------------------------------------
-- JSON4Lua: JSON encoding / decoding support for the Lua language.
-- json Module.
-- Author: Craig Mason-Jones
-- Homepage: http://json.luaforge.net/
-- Version: 0.9.40
-- This module is released under the MIT License (MIT).
-- Please see LICENCE.txt for details.
--
-- USAGE:
-- This module exposes two functions:
--   encode(o)
--     Returns the table / string / boolean / number / nil / json.null value as a JSON-encoded string.
--   decode(json_string)
--     Returns a Lua object populated with the data encoded in the JSON string json_string.
--
-- REQUIREMENTS:
--   compat-5.1 if using Lua 5.0
--
-- CHANGELOG
--   0.9.20 Introduction of local Lua functions for private functions (removed _ function prefix). 
--          Fixed Lua 5.1 compatibility issues.
--   		Introduced json.null to have null values in associative arrays.
--          encode() performance improvement (more than 50%) through table.concat rather than ..
--          Introduced decode ability to ignore /**/ comments in the JSON string.
--   0.9.10 Fix to array encoding / decoding to correctly manage nil/null values in arrays.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
-- Imports and dependencies
-----------------------------------------------------------------------------
local math = require(&#39;math&#39;)
local string = require(&quot;string&quot;)
local table = require(&quot;table&quot;)

local base = _G

-----------------------------------------------------------------------------
-- Module declaration
-----------------------------------------------------------------------------
module(&quot;json&quot;)

-- Public functions

-- Private functions
local decode_scanArray
local decode_scanComment
local decode_scanConstant
local decode_scanNumber
local decode_scanObject
local decode_scanString
local decode_scanWhitespace
local encodeString
local isArray
local isEncodable

-----------------------------------------------------------------------------
-- PUBLIC FUNCTIONS
-----------------------------------------------------------------------------
--- Encodes an arbitrary Lua object / variable.
-- @param v The Lua object / variable to be JSON encoded.
-- @return String containing the JSON encoding in internal Lua string format (i.e. not unicode)
function encode (v)
  -- Handle nil values
  if v==nil then
    return &quot;null&quot;
  end
  
  local vtype = base.type(v)  

  -- Handle strings
  if vtype==&#39;string&#39; then    
    return &#39;&quot;&#39; .. encodeString(v) .. &#39;&quot;&#39;	    -- Need to handle encoding in string
  end
  
  -- Handle booleans
  if vtype==&#39;number&#39; or vtype==&#39;boolean&#39; then
    return base.tostring(v)
  end
  
  -- Handle tables
  if vtype==&#39;table&#39; then
    local rval = {}
    -- Consider arrays separately
    local bArray, maxCount = isArray(v)
    if bArray then
      for i = 1,maxCount do
        table.insert(rval, encode(v[i]))
      end
    else	-- An object, not an array
      for i,j in base.pairs(v) do
        if isEncodable(i) and isEncodable(j) then
          table.insert(rval, &#39;&quot;&#39; .. encodeString(i) .. &#39;&quot;:&#39; .. encode(j))
        end
      end
    end
    if bArray then
      return &#39;[&#39; .. table.concat(rval,&#39;,&#39;) ..&#39;]&#39;
    else
      return &#39;{&#39; .. table.concat(rval,&#39;,&#39;) .. &#39;}&#39;
    end
  end
  
  -- Handle null values
  if vtype==&#39;function&#39; and v==null then
    return &#39;null&#39;
  end
  
  base.assert(false,&#39;encode attempt to encode unsupported type &#39; .. vtype .. &#39;:&#39; .. base.tostring(v))
end


--- Decodes a JSON string and returns the decoded value as a Lua data structure / value.
-- @param s The string to scan.
-- @param [startPos] Optional starting position where the JSON string is located. Defaults to 1.
-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,
-- and the position of the first character after
-- the scanned JSON object.
function decode(s, startPos)
  startPos = startPos and startPos or 1
  startPos = decode_scanWhitespace(s,startPos)
  base.assert(startPos&lt;=string.len(s), &#39;Unterminated JSON encoded object found at position in [&#39; .. s .. &#39;]&#39;)
  local curChar = string.sub(s,startPos,startPos)
  -- Object
  if curChar==&#39;{&#39; then
    return decode_scanObject(s,startPos)
  end
  -- Array
  if curChar==&#39;[&#39; then
    return decode_scanArray(s,startPos)
  end
  -- Number
  if string.find(&quot;+-0123456789.e&quot;, curChar, 1, true) then
    return decode_scanNumber(s,startPos)
  end
  -- String
  if curChar==[[&quot;]] or curChar==[[&#39;]] then
    return decode_scanString(s,startPos)
  end
  if string.sub(s,startPos,startPos+1)==&#39;/*&#39; then
    return decode(s, decode_scanComment(s,startPos))
  end
  -- Otherwise, it must be a constant
  return decode_scanConstant(s,startPos)
end

--- The null function allows one to specify a null value in an associative array (which is otherwise
-- discarded if you set the value with &#39;nil&#39; in Lua. Simply set t = { first=json.null }
function null()
  return null -- so json.null() will also return null ;-)
end
-----------------------------------------------------------------------------
-- Internal, PRIVATE functions.
-- Following a Python-like convention, I have prefixed all these &#39;PRIVATE&#39;
-- functions with an underscore.
-----------------------------------------------------------------------------

--- Scans an array from JSON into a Lua object
-- startPos begins at the start of the array.
-- Returns the array and the next starting position
-- @param s The string being scanned.
-- @param startPos The starting position for the scan.
-- @return table, int The scanned array as a table, and the position of the next character to scan.
function decode_scanArray(s,startPos)
  local array = {}	-- The return value
  local stringLen = string.len(s)
  base.assert(string.sub(s,startPos,startPos)==&#39;[&#39;,&#39;decode_scanArray called but array does not start at position &#39; .. startPos .. &#39; in string:\n&#39;..s )
  startPos = startPos + 1
  -- Infinite loop for array elements
  repeat
    startPos = decode_scanWhitespace(s,startPos)
    base.assert(startPos&lt;=stringLen,&#39;JSON String ended unexpectedly scanning array.&#39;)
    local curChar = string.sub(s,startPos,startPos)
    if (curChar==&#39;]&#39;) then
      return array, startPos+1
    end
    if (curChar==&#39;,&#39;) then
      startPos = decode_scanWhitespace(s,startPos+1)
    end
    base.assert(startPos&lt;=stringLen, &#39;JSON String ended unexpectedly scanning array.&#39;)
    object, startPos = decode(s,startPos)
    table.insert(array,object)
  until false
end

--- Scans a comment and discards the comment.
-- Returns the position of the next character following the comment.
-- @param string s The JSON string to scan.
-- @param int startPos The starting position of the comment
function decode_scanComment(s, startPos)
  base.assert( string.sub(s,startPos,startPos+1)==&#39;/*&#39;, &quot;decode_scanComment called but comment does not start at position &quot; .. startPos)
  local endPos = string.find(s,&#39;*/&#39;,startPos+2)
  base.assert(endPos~=nil, &quot;Unterminated comment in string at &quot; .. startPos)
  return endPos+2  
end

--- Scans for given constants: true, false or null
-- Returns the appropriate Lua type, and the position of the next character to read.
-- @param s The string being scanned.
-- @param startPos The position in the string at which to start scanning.
-- @return object, int The object (true, false or nil) and the position at which the next character should be 
-- scanned.
function decode_scanConstant(s, startPos)
  local consts = { [&quot;true&quot;] = true, [&quot;false&quot;] = false, [&quot;null&quot;] = nil }
  local constNames = {&quot;true&quot;,&quot;false&quot;,&quot;null&quot;}

  for i,k in base.pairs(constNames) do
    --print (&quot;[&quot; .. string.sub(s,startPos, startPos + string.len(k) -1) ..&quot;]&quot;, k)
    if string.sub(s,startPos, startPos + string.len(k) -1 )==k then
      return consts[k], startPos + string.len(k)
    end
  end
  base.assert(nil, &#39;Failed to scan constant from string &#39; .. s .. &#39; at starting position &#39; .. startPos)
end

--- Scans a number from the JSON encoded string.
-- (in fact, also is able to scan numeric +- eqns, which is not
-- in the JSON spec.)
-- Returns the number, and the position of the next character
-- after the number.
-- @param s The string being scanned.
-- @param startPos The position at which to start scanning.
-- @return number, int The extracted number and the position of the next character to scan.
function decode_scanNumber(s,startPos)
  local endPos = startPos+1
  local stringLen = string.len(s)
  local acceptableChars = &quot;+-0123456789.e&quot;
  while (string.find(acceptableChars, string.sub(s,endPos,endPos), 1, true)
	and endPos&lt;=stringLen
	) do
    endPos = endPos + 1
  end
  local stringValue = &#39;return &#39; .. string.sub(s,startPos, endPos-1)
  local stringEval = base.loadstring(stringValue)
  base.assert(stringEval, &#39;Failed to scan number [ &#39; .. stringValue .. &#39;] in JSON string at position &#39; .. startPos .. &#39; : &#39; .. endPos)
  return stringEval(), endPos
end

--- Scans a JSON object into a Lua object.
-- startPos begins at the start of the object.
-- Returns the object and the next starting position.
-- @param s The string being scanned.
-- @param startPos The starting position of the scan.
-- @return table, int The scanned object as a table and the position of the next character to scan.
function decode_scanObject(s,startPos)
  local object = {}
  local stringLen = string.len(s)
  local key, value
  base.assert(string.sub(s,startPos,startPos)==&#39;{&#39;,&#39;decode_scanObject called but object does not start at position &#39; .. startPos .. &#39; in string:\n&#39; .. s)
  startPos = startPos + 1
  repeat
    startPos = decode_scanWhitespace(s,startPos)
    base.assert(startPos&lt;=stringLen, &#39;JSON string ended unexpectedly while scanning object.&#39;)
    local curChar = string.sub(s,startPos,startPos)
    if (curChar==&#39;}&#39;) then
      return object,startPos+1
    end
    if (curChar==&#39;,&#39;) then
      startPos = decode_scanWhitespace(s,startPos+1)
    end
    base.assert(startPos&lt;=stringLen, &#39;JSON string ended unexpectedly scanning object.&#39;)
    -- Scan the key
    key, startPos = decode(s,startPos)
    base.assert(startPos&lt;=stringLen, &#39;JSON string ended unexpectedly searching for value of key &#39; .. key)
    startPos = decode_scanWhitespace(s,startPos)
    base.assert(startPos&lt;=stringLen, &#39;JSON string ended unexpectedly searching for value of key &#39; .. key)
    base.assert(string.sub(s,startPos,startPos)==&#39;:&#39;,&#39;JSON object key-value assignment mal-formed at &#39; .. startPos)
    startPos = decode_scanWhitespace(s,startPos+1)
    base.assert(startPos&lt;=stringLen, &#39;JSON string ended unexpectedly searching for value of key &#39; .. key)
    value, startPos = decode(s,startPos)
    object[key]=value
  until false	-- infinite loop while key-value pairs are found
end

-- START SoniEx2
-- Initialize some things used by decode_scanString
-- You know, for efficiency
local escapeSequences = {
  [&quot;\\t&quot;] = &quot;\t&quot;,
  [&quot;\\f&quot;] = &quot;\f&quot;,
  [&quot;\\r&quot;] = &quot;\r&quot;,
  [&quot;\\n&quot;] = &quot;\n&quot;,
  [&quot;\\b&quot;] = &quot;\b&quot;
}
base.setmetatable(escapeSequences, {__index = function(t,k)
  -- skip &quot;\&quot; aka strip escape
  return string.sub(k,2)
end})
-- END SoniEx2

--- Scans a JSON string from the opening inverted comma or single quote to the
-- end of the string.
-- Returns the string extracted as a Lua string,
-- and the position of the next non-string character
-- (after the closing inverted comma or single quote).
-- @param s The string being scanned.
-- @param startPos The starting position of the scan.
-- @return string, int The extracted string as a Lua string, and the next character to parse.
function decode_scanString(s,startPos)
  base.assert(startPos, &#39;decode_scanString(..) called without start position&#39;)
  local startChar = string.sub(s,startPos,startPos)
  -- START SoniEx2
  -- PS: I don&#39;t think single quotes are valid JSON
  base.assert(startChar == [[&quot;]] or startChar == [[&#39;]],&#39;decode_scanString called for a non-string&#39;)
  --base.assert(startPos, &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; for string at position &quot; .. oldStart)
  local t = {}
  local i,j = startPos,startPos
  while string.find(s, startChar, j+1) ~= j+1 do
    local oldj = j
    i,j = string.find(s, &quot;\\.&quot;, j+1)
    local x,y = string.find(s, startChar, oldj+1)
    if not i or x &lt; i then
      base.print(s, startPos, string.sub(s,startPos,oldj))
      i,j = x,y-1
      if not x then base.print(s, startPos, string.sub(s,startPos,oldj)) end
    end
    table.insert(t, string.sub(s, oldj+1, i-1))
    if string.sub(s, i, j) == &quot;\\u&quot; then
      local a = string.sub(s,j+1,j+4)
      j = j + 4
      local n = base.tonumber(a, 16)
      base.assert(n, &quot;String decoding failed: bad Unicode escape &quot; .. a .. &quot; at position &quot; .. i .. &quot; : &quot; .. j)
      -- math.floor(x/2^y) == lazy right shift
      -- a % 2^b == bitwise_and(a, (2^b)-1)
      -- 64 = 2^6
      -- 4096 = 2^12 (or 2^6 * 2^6)
      local x
      if n &lt; 0x80 then
        x = string.char(n % 0x80)
      elseif n &lt; 0x800 then
        -- [110x xxxx] [10xx xxxx]
        x = string.char(0xC0 + (math.floor(n/64) % 0x20), 0x80 + (n % 0x40))
      else
        -- [1110 xxxx] [10xx xxxx] [10xx xxxx]
        x = string.char(0xE0 + (math.floor(n/4096) % 0x10), 0x80 + (math.floor(n/64) % 0x40), 0x80 + (n % 0x40))
      end
      table.insert(t, x)
    else
      table.insert(t, escapeSequences[string.sub(s, i, j)])
    end
  end
  table.insert(t,string.sub(j, j+1))
  base.assert(string.find(s, startChar, j+1), &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; at position &quot; .. j .. &quot;(for string at position &quot; .. startPos .. &quot;)&quot;)
  return table.concat(t,&quot;&quot;), j+2
  -- END SoniEx2
end

--- Scans a JSON string skipping all whitespace from the current start position.
-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.
-- @param s The string being scanned
-- @param startPos The starting position where we should begin removing whitespace.
-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string
-- was reached.
function decode_scanWhitespace(s,startPos)
  local whitespace=&quot; \n\r\t&quot;
  local stringLen = string.len(s)
  while ( string.find(whitespace, string.sub(s,startPos,startPos), 1, true)  and startPos &lt;= stringLen) do
    startPos = startPos + 1
  end
  return startPos
end

--- Encodes a string to be JSON-compatible.
-- This just involves back-quoting inverted commas, back-quotes and newlines, I think ;-)
-- @param s The string to return as a JSON encoded (i.e. backquoted string)
-- @return The string appropriately escaped.

local escapeList = {
    [&#39;&quot;&#39;]  = &#39;\\&quot;&#39;,
    [&#39;\\&#39;] = &#39;\\\\&#39;,
    [&#39;/&#39;]  = &#39;\\/&#39;, 
    [&#39;\b&#39;] = &#39;\\b&#39;,
    [&#39;\f&#39;] = &#39;\\f&#39;,
    [&#39;\n&#39;] = &#39;\\n&#39;,
    [&#39;\r&#39;] = &#39;\\r&#39;,
    [&#39;\t&#39;] = &#39;\\t&#39;
}

function encodeString(s)
 return s:gsub(&quot;.&quot;, function(c) return escapeList[c] end) -- SoniEx2: 5.0 compat
end

-- Determines whether the given Lua type is an array or a table / dictionary.
-- We consider any table an array if it has indexes 1..n for its n items, and no
-- other data in the table.
-- I think this method is currently a little &#39;flaky&#39;, but can&#39;t think of a good way around it yet...
-- @param t The table to evaluate as an array
-- @return boolean, number True if the table can be represented as an array, false otherwise. If true,
-- the second returned value is the maximum
-- number of indexed elements in the array. 
function isArray(t)
  -- Next we count all the elements, ensuring that any non-indexed elements are not-encodable 
  -- (with the possible exception of &#39;n&#39;)
  local maxIndex = 0
  for k,v in base.pairs(t) do
    if (base.type(k)==&#39;number&#39; and math.floor(k)==k and 1&lt;=k) then	-- k,v is an indexed pair
      if (not isEncodable(v)) then return false end	-- All array elements must be encodable
      maxIndex = math.max(maxIndex,k)
    else
      if (k==&#39;n&#39;) then
        if v ~= table.getn(t) then return false end  -- False if n does not hold the number of elements
      else -- Else of (k==&#39;n&#39;)
        if isEncodable(v) then return false end
      end  -- End of (k~=&#39;n&#39;)
    end -- End of k,v not an indexed pair
  end  -- End of loop across all pairs
  return true, maxIndex
end

--- Determines whether the given Lua object / table / variable can be JSON encoded. The only
-- types that are JSON encodable are: string, boolean, number, nil, table and json.null.
-- In this implementation, all other types are ignored.
-- @param o The object to examine.
-- @return boolean True if the object should be JSON encoded, false if it should be ignored.
function isEncodable(o)
  local t = base.type(o)
  return (t==&#39;string&#39; or t==&#39;boolean&#39; or t==&#39;number&#39; or t==&#39;nil&#39; or t==&#39;table&#39;) or (t==&#39;function&#39; and o==null) 
end"
                   luaMethodLinkedProperty=""
                   luaMethodName="json4lua"
                   luaMethodSource="0"
                   luaMethodValid="1"
                   uuid="00000000000000000000000000000004" />
        <luaMethod luaMethodCode="--{{{  history

--15/03/06 DCN Created based on RemDebug
--28/04/06 DCN Update for Lua 5.1
--01/06/06 DCN Fix command argument parsing
--             Add step/over N facility
--             Add trace lines facility
--05/06/06 DCN Add trace call/return facility
--06/06/06 DCN Make it behave when stepping through the creation of a coroutine
--06/06/06 DCN Integrate the simple debugger into the main one
--07/06/06 DCN Provide facility to step into coroutines
--13/06/06 DCN Fix bug that caused the function environment to get corrupted with the global one
--14/06/06 DCN Allow &#39;sloppy&#39; file names when setting breakpoints
--04/08/06 DCN Allow for no space after command name
--11/08/06 DCN Use io.write not print
--30/08/06 DCN Allow access to array elements in &#39;dump&#39;
--10/10/06 DCN Default to breakfile for all commands that require a filename and give &#39;-&#39;
--06/12/06 DCN Allow for punctuation characters in DUMP variable names
--03/01/07 DCN Add pause on/off facility
--19/06/07 DCN Allow for duff commands being typed in the debugger (thanks to Michael.Bringmann@lsi.com)
--             Allow for case sensitive file systems               (thanks to Michael.Bringmann@lsi.com)
--04/08/09 DCN Add optional line count param to pause
--05/08/09 DCN Reset the debug hook in Pause() even if we think we&#39;re started
--30/09/09 DCN Re-jig to not use co-routines (makes debugging co-routines awkward)
--01/10/09 DCN Add ability to break on reaching any line in a file
--24/07/13 TWW Added code for emulating setfenv/getfenv in Lua 5.2 as per
--             http://lua-users.org/lists/lua-l/2010-06/msg00313.html
--25/07/13 TWW Copied Alex Parrill&#39;s fix for errors when tracing back across a C frame
--             (https://github.com/ColonelThirtyTwo/clidebugger, 26/01/12)
--25/07/13 DCN Allow for windows and unix file name conventions in has_breakpoint
--26/07/13 DCN Allow for \ being interpreted as an escape inside a [] pattern in 5.2

--}}}
--{{{  description

--A simple command line debug system for Lua written by Dave Nichols of
--Match-IT Limited. Its public domain software. Do with it as you wish.

--This debugger was inspired by:
-- RemDebug 1.0 Beta
-- Copyright Kepler Project 2005 (http://www.keplerproject.org/remdebug)

--Usage:
--  require(&#39;debugger&#39;)        --load the debug library
--  pause(message)             --start/resume a debug session

--An assert() failure will also invoke the debugger.

--}}}

local IsWindows = string.find(string.lower(os.getenv(&#39;OS&#39;) or &#39;&#39;),&#39;^windows&#39;)

local coro_debugger
local events = { BREAK = 1, WATCH = 2, STEP = 3, SET = 4 }
breakpoints = {}
local watches = {}
local step_into   = false
local step_over   = false
local step_lines  = 0
local step_level  = {main=0}
local stack_level = {main=0}
local trace_level = {main=0}
local trace_calls = false
local trace_returns = false
local trace_lines = false
local ret_file, ret_line, ret_name
local current_thread = &#39;main&#39;
local started = false
local pause_off = false
local _g      = _G
local cocreate, cowrap = coroutine.create, coroutine.wrap
local pausemsg = &#39;pause&#39;

--{{{  make Lua 5.2 compatible

if not setfenv then -- Lua 5.2
  --[[
  As far as I can see, the only missing detail of these functions (except
  for occasional bugs) to achieve 100% compatibility is the case of
  &#39;getfenv&#39; over a function that does not have an _ENV variable (that is,
  it uses no globals).

  We could use a weak table to keep the environments of these functions
  when set by setfenv, but that still misses the case of a function
  without _ENV that was not subjected to setfenv.

  -- Roberto
  ]]--

  setfenv = setfenv or function(f, t)
    f = (type(f) == &#39;function&#39; and f or debug.getinfo(f + 1, &#39;f&#39;).func)
    local name
    local up = 0
    repeat
      up = up + 1
      name = debug.getupvalue(f, up)
    until name == &#39;_ENV&#39; or name == nil
    if name then
      debug.upvaluejoin(f, up, function() return name end, 1) -- use unique upvalue
      debug.setupvalue(f, up, t)
    end
  end

  getfenv = getfenv or function(f)
    f = (type(f) == &#39;function&#39; and f or debug.getinfo(f + 1, &#39;f&#39;).func)
    local name, val
    local up = 0
    repeat
      up = up + 1
      name, val = debug.getupvalue(f, up)
    until name == &#39;_ENV&#39; or name == nil
    return val
  end

end

--}}}

--{{{  local hints -- command help
--The format in here is name=summary|description
local hints = {

pause =   [[
pause(msg[,lines][,force]) -- start/resume a debugger session|

This can only be used in your code or from the console as a means to
start/resume a debug session.
If msg is given that is shown when the session starts/resumes. Useful to
give a context if you&#39;ve instrumented your code with pause() statements.

If lines is given, the script pauses after that many lines, else it pauses
immediately.

If force is true, the pause function is honoured even if poff has been used.
This is useful when in an interactive console session to regain debugger
control.
]],

poff =    [[
poff                -- turn off pause() command|

This causes all pause() commands to be ignored. This is useful if you have
instrumented your code in a busy loop and want to continue normal execution
with no further interruption.
]],

pon =     [[
pon                 -- turn on pause() command|

This re-instates honouring the pause() commands you may have instrumented
your code with.
]],

setb =    [[
setb [line file]    -- set a breakpoint to line/file|, line 0 means &#39;any&#39;

If file is omitted or is &quot;-&quot; the breakpoint is set at the file for the
currently set level (see &quot;set&quot;). Execution pauses when this line is about
to be executed and the debugger session is re-activated.

The file can be given as the fully qualified name, partially qualified or
just the file name. E.g. if file is set as &quot;myfile.lua&quot;, then whenever
execution reaches any file that ends with &quot;myfile.lua&quot; it will pause. If
no extension is given, any extension will do.

If the line is given as 0, then reaching any line in the file will do.
]],

delb =    [[
delb [line file]    -- removes a breakpoint|

If file is omitted or is &quot;-&quot; the breakpoint is removed for the file of the
currently set level (see &quot;set&quot;).
]],

delallb = [[
delallb             -- removes all breakpoints|
]],

setw =    [[
setw &lt;exp&gt;          -- adds a new watch expression|

The expression is evaluated before each line is executed. If the expression
yields true then execution is paused and the debugger session re-activated.
The expression is executed in the context of the line about to be executed.
]],

delw =    [[
delw &lt;index&gt;        -- removes the watch expression at index|

The index is that returned when the watch expression was set by setw.
]],

delallw = [[
delallw             -- removes all watch expressions|
]],

run     = [[
run                 -- run until next breakpoint or watch expression|
]],

step    = [[
step [N]            -- run next N lines, stepping into function calls|

If N is omitted, use 1.
]],

over    = [[
over [N]            -- run next N lines, stepping over function calls|

If N is omitted, use 1.
]],

out     = [[
out [N]             -- run lines until stepped out of N functions|

If N is omitted, use 1.
If you are inside a function, using &quot;out 1&quot; will run until you return
from that function to the caller.
]],

gotoo   = [[
gotoo [line file]    -- step to line in file|

This is equivalent to &#39;setb line file&#39;, followed by &#39;run&#39;, followed
by &#39;delb line file&#39;.
]],

listb   = [[
listb               -- lists breakpoints|
]],

listw   = [[
listw               -- lists watch expressions|
]],

set     = [[
set [level]         -- set context to stack level, omitted=show|

If level is omitted it just prints the current level set.
This sets the current context to the level given. This affects the
context used for several other functions (e.g. vars). The possible
levels are those shown by trace.
]],

vars    = [[
vars [depth]        -- list context locals to depth, omitted=1|

If depth is omitted then uses 1.
Use a depth of 0 for the maximum.
Lists all non-nil local variables and all non-nil upvalues in the
currently set context. For variables that are tables, lists all fields
to the given depth.
]],

fenv    = [[
fenv [depth]        -- list context function env to depth, omitted=1|

If depth is omitted then uses 1.
Use a depth of 0 for the maximum.
Lists all function environment variables in the currently set context.
For variables that are tables, lists all fields to the given depth.
]],

glob    = [[
glob [depth]        -- list globals to depth, omitted=1|

If depth is omitted then uses 1.
Use a depth of 0 for the maximum.
Lists all global variables.
For variables that are tables, lists all fields to the given depth.
]],

ups     = [[
ups                 -- list all the upvalue names|

These names will also be in the &quot;vars&quot; list unless their value is nil.
This provides a means to identify which vars are upvalues and which are
locals. If a name is both an upvalue and a local, the local value takes
precedance.
]],

locs    = [[
locs                -- list all the locals names|

These names will also be in the &quot;vars&quot; list unless their value is nil.
This provides a means to identify which vars are upvalues and which are
locals. If a name is both an upvalue and a local, the local value takes
precedance.
]],

dump    = [[
dump &lt;var&gt; [depth]  -- dump all fields of variable to depth|

If depth is omitted then uses 1.
Use a depth of 0 for the maximum.
Prints the value of &lt;var&gt; in the currently set context level. If &lt;var&gt;
is a table, lists all fields to the given depth. &lt;var&gt; can be just a
name, or name.field or name.# to any depth, e.g. t.1.f accesses field
&#39;f&#39; in array element 1 in table &#39;t&#39;.

Can also be called from a script as dump(var,depth).
]],

tron    = [[
tron [crl]          -- turn trace on for (c)alls, (r)etuns, (l)lines|

If no parameter is given then tracing is turned off.
When tracing is turned on a line is printed to the console for each
debug &#39;event&#39; selected. c=function calls, r=function returns, l=lines.
]],

trace   = [[
trace               -- dumps a stack trace|

Format is [level] = file,line,name
The level is a candidate for use by the &#39;set&#39; command.
]],

info    = [[
info                -- dumps the complete debug info captured|

Only useful as a diagnostic aid for the debugger itself. This information
can be HUGE as it dumps all variables to the maximum depth, so be careful.
]],

show    = [[
show line file X Y  -- show X lines before and Y after line in file|

If line is omitted or is &#39;-&#39; then the current set context line is used.
If file is omitted or is &#39;-&#39; then the current set context file is used.
If file is not fully qualified and cannot be opened as specified, then
a search for the file in the package[path] is performed using the usual
&quot;require&quot; searching rules. If no file extension is given, .lua is used.
Prints the lines from the source file around the given line.
]],

exit    = [[
exit                -- exits debugger, re-start it using pause()|
]],

help    = [[
help [command]      -- show this list or help for command|
]],

[&quot;&lt;statement&gt;&quot;] = [[
&lt;statement&gt;         -- execute a statement in the current context|

The statement can be anything that is legal in the context, including
assignments. Such assignments affect the context and will be in force
immediately. Any results returned are printed. Use &#39;=&#39; as a short-hand
for &#39;return&#39;, e.g. &quot;=func(arg)&quot; will call &#39;func&#39; with &#39;arg&#39; and print
the results, and &quot;=var&quot; will just print the value of &#39;var&#39;.
]],

what    = [[
what &lt;func&gt;         -- show where &lt;func&gt; is defined (if known)|
]],

}
--}}}

--{{{ Local function to get table size
local function tsize(t)
    local count=0

    for k,v in pairs(t) do
        count = count + 1
    end

    return count
end
---}}}

---{{{ Global utility function to set breakpoints, used inside Ctrlr
function setBreakpoint(line, file, shouldBeSet)
    if not breakpoints[line] then
        breakpoints[line] = {}
    end

    if shouldBeSet then
        breakpoints[line][file] = true
    else
        breakpoints[line] = nil
    end
end
---}}}


--{{{  local function getinfo(level,field)

--like debug.getinfo but copes with no activation record at the given level
--and knows how to get &#39;field&#39;. &#39;field&#39; can be the name of any of the
--activation record fields or any of the &#39;what&#39; names or nil for everything.
--only valid when using the stack level to get info, not a function name.

local function getinfo(level,field)
  level = level + 1  --to get to the same relative level as the caller
  if not field then return debug.getinfo(level) end
  local what
  if field == &#39;name&#39; or field == &#39;namewhat&#39; then
    what = &#39;n&#39;
  elseif field == &#39;what&#39; or field == &#39;source&#39; or field == &#39;linedefined&#39; or field == &#39;lastlinedefined&#39; or field == &#39;short_src&#39; then
    what = &#39;S&#39;
  elseif field == &#39;currentline&#39; then
    what = &#39;l&#39;
  elseif field == &#39;nups&#39; then
    what = &#39;u&#39;
  elseif field == &#39;func&#39; then
    what = &#39;f&#39;
  else
    return debug.getinfo(level,field)
  end
  local ar = debug.getinfo(level,what)
  if ar then return ar[field] else return nil end
end

--}}}
--{{{  local function indented( level, ... )

local function indented( level, ... )
  ctrlrDebugger:write( string.format (&quot;%s%s\n&quot;, string.rep(&#39;  &#39;,level), table.concat({...}) ))
end

--}}}
--{{{  local function dumpval( level, name, value, limit )

local dumpvisited

local function dumpval( level, name, value, limit )
    local index

    if type(name) == &#39;number&#39; then
        index = string.format(&quot;%q,&quot;,name)
    elseif type(name) == &#39;string&#39; and (name == &#39;__VARSLEVEL__&#39; or name == &#39;__ENVIRONMENT__&#39; or name == &#39;__GLOBALS__&#39; or name == &#39;__UPVALUES__&#39; or name == &#39;__LOCALS__&#39;) then
        --ignore these, they are debugger generated
        return
    elseif type(name) == &#39;string&#39; and string.find(name,&#39;^[_%a][_.%w]*$&#39;) then
        index = string.format (&quot;%q: &quot;, name);
    else
        index = string.format (&quot;%q,&quot;, tostring(name))
    end

    if type(value) == &#39;table&#39; then
        if dumpvisited[value] then
            indented (level, index, string.format(&quot;%q&quot;, dumpvisited[value]))
        else
            dumpvisited[value] = string.format (&quot;\&quot;table\&quot;: \&quot;%d\&quot;,&quot;, tsize (value))
            if (limit or 0) &gt; 0 and level+1 &gt;= limit then
                indented (level, index, string.format (&quot;{%s&quot;, string.gsub(dumpvisited[value], &quot;,&quot;, &quot;},&quot;)))
            else
                indented (level, index, &quot;{\n&quot;, dumpvisited[value])

                for n,v in pairs(value) do
                    dumpval (level+1, n, v, limit)
                end

                indented (level, &quot;}&quot;)
            end
        end
    else
        if type(value) == &#39;string&#39; then
            indented (level, index, string.format(&quot;{\&quot;string\&quot;: %q}&quot;,value), &#39;,&#39;)
        end

        if type(value) == &#39;userdata&#39; then
            info = class_info (value)
            indented (level, index, string.format (&quot;{\&quot;userdata\&quot;: %q}&quot;, info.name) , &#39;,&#39;)
        end

        if type(value) == &#39;number&#39; then
            indented (level, index, string.format (&quot;{\&quot;number\&quot;: %q}&quot;,tostring(value)), &#39;,&#39;)
        end
    end
end

--}}}
--{{{  local function dumpvar( value, limit, name )

local function dumpvar( value, limit, name )
  ctrlrDebugger:write (&quot;\n::start dumpvar\n&quot;)
  dumpvisited = {}
  dumpval( 0, name or tostring(value), value, limit )
  ctrlrDebugger:write (&quot;::end\n&quot;)
end

--}}}
--{{{  local function show(file,line,before,after)

--show +/-N lines of a file around line M

local function show(file,line,before,after)

  line   = tonumber(line   or 1)
  before = tonumber(before or 10)
  after  = tonumber(after  or before)

  if not string.find(file,&#39;%.&#39;) then file = file..&#39;.lua&#39; end

  local f = io.open(file,&#39;r&#39;)
  if not f then
    --{{{  try to find the file in the path

    --
    -- looks for a file in the package path
    --
    local path = package.path or LUA_PATH or &#39;&#39;
    for c in string.gmatch (path, &quot;[^;]+&quot;) do
      local c = string.gsub (c, &quot;%?%.lua&quot;, file)
      f = io.open (c,&#39;r&#39;)
      if f then
        break
      end
    end

    --}}}
    if not f then
      ctrlrDebugger:write(&#39;Cannot find &#39;..file..&#39;\n&#39;)
      return
    end
  end

  local i = 0
  for l in f:lines() do
    i = i + 1
    if i &gt;= (line-before) then
      if i &gt; (line+after) then break end
      if i == line then
        ctrlrDebugger:write(i..&#39;***\t&#39;..l..&#39;\n&#39;)
      else
        ctrlrDebugger:write(i..&#39;\t&#39;..l..&#39;\n&#39;)
      end
    end
  end

  f:close()

end

--}}}
--{{{  local function tracestack(l)

local function gi( i )
  return function() i=i+1 return debug.getinfo(i),i end
end

local function gl( level, j )
  return function() j=j+1 return debug.getlocal( level, j ) end
end

local function gu( func, k )
  return function() k=k+1 return debug.getupvalue( func, k ) end
end

local  traceinfo

local function tracestack(l)
  local l = l + 1                        --NB: +1 to get level relative to caller
  traceinfo = {}
  traceinfo.pausemsg = pausemsg
  for ar,i in gi(l) do
    table.insert( traceinfo, ar )
    if ar.what ~= &#39;C&#39; then
      local names  = {}
      local values = {}
      for n,v in gl(i,0) do
        if string.sub(n,1,1) ~= &#39;(&#39; then   --ignore internal control variables
          table.insert( names, n )
          table.insert( values, v )
        end
      end
      if #names &gt; 0 then
        ar.lnames  = names
        ar.lvalues = values
      end
    end
    if ar.func then
      local names  = {}
      local values = {}
      for n,v in gu(ar.func,0) do
        if string.sub(n,1,1) ~= &#39;(&#39; then   --ignore internal control variables
          table.insert( names, n )
          table.insert( values, v )
        end
      end
      if #names &gt; 0 then
        ar.unames  = names
        ar.uvalues = values
      end
    end
  end
end

--}}}
--{{{  local function trace()

local function trace(set)
  ctrlrDebugger:write (&quot;\n::start trace\n&quot;)
  local mark
  for level,ar in ipairs(traceinfo) do
    if level == set then
      mark = &#39;***&#39;
    else
      mark = &#39;&#39;
    end
    ctrlrDebugger:write(&#39;[&#39;..level..&#39;]&#39;..mark..&#39;\t&#39;..(ar.name or ar.what)..&#39; in &#39;..ar.short_src..&#39;:&#39;..ar.currentline..&#39;\n&#39;)
  end

  ctrlrDebugger:write (&quot;::end\n&quot;)
end

--}}}
--{{{  local function info()

local function info()
    dumpvar( traceinfo, 0, &#39;traceinfo&#39; )
end

--}}}

--{{{  local function set_breakpoint(file, line, once)

local function set_breakpoint(file, line, once)
  if not breakpoints[line] then
    breakpoints[line] = {}
  end
  if once then
    breakpoints[line][file] = 1
  else
    breakpoints[line][file] = true
  end
end

--}}}
--{{{  local function remove_breakpoint(file, line)

local function remove_breakpoint(file, line)
  if breakpoints[line] then
    breakpoints[line][file] = nil
  end
end

--}}}
--{{{  local function has_breakpoint(file, line)

--allow for &#39;sloppy&#39; file names
--search for file and all variations walking up its directory hierachy
--ditto for the file with no extension
--a breakpoint can be permenant or once only, if once only its removed
--after detection here, these are used for temporary breakpoints in the
--debugger loop when executing the &#39;gotoo&#39; command
--a breakpoint on line 0 of a file means any line in that file

local function has_breakpoint(file, line)
  local isLine = breakpoints[line]
  local isZero = breakpoints[0]
  if not isLine and not isZero then return false end
  local noext = string.gsub(file,&quot;(%..-)$&quot;,&#39;&#39;,1)
  if noext == file then noext = nil end
  while file do
    if isLine and isLine[file] then
      if isLine[file] == 1 then isLine[file] = nil end
      return true
    end
    if isZero and isZero[file] then
      if isZero[file] == 1 then isZero[file] = nil end
      return true
    end
    if IsWindows then
      file = string.match(file,&quot;[:/\\](.+)$&quot;)
    else
      file = string.match(file,&quot;[:/](.+)$&quot;)
    end
  end
  while noext do
    if isLine and isLine[noext] then
      if isLine[noext] == 1 then isLine[noext] = nil end
      return true
    end
    if isZero and isZero[noext] then
      if isZero[noext] == 1 then isZero[noext] = nil end
      return true
    end
    if IsWindows then
      noext = string.match(noext,&quot;[:/\\](.+)$&quot;)
    else
      noext = string.match(noext,&quot;[:/](.+)$&quot;)
    end
  end
  return false
end

--}}}
--{{{  local function capture_vars(ref,level,line)

local function capture_vars(ref,level,line)
  --get vars, file and line for the given level relative to debug_hook offset by ref

  local lvl = ref + level                --NB: This includes an offset of +1 for the call to here

  --{{{  capture variables

  local ar = debug.getinfo(lvl, &quot;f&quot;)
  if not ar then return {},&#39;?&#39;,0 end

  local vars = {__UPVALUES__={}, __LOCALS__={}}
  local i

  local func = ar.func
  if func then
    i = 1
    while true do
      local name, value = debug.getupvalue(func, i)
      if not name then break end
      if string.sub(name,1,1) ~= &#39;(&#39; then  --NB: ignoring internal control variables
        vars[name] = value
        vars.__UPVALUES__[i] = name
      end
      i = i + 1
    end
    vars.__ENVIRONMENT__ = getfenv(func)
  end

  vars.__GLOBALS__ = getfenv(0)

  i = 1
  while true do
    local name, value = debug.getlocal(lvl, i)
    if not name then break end
    if string.sub(name,1,1) ~= &#39;(&#39; then    --NB: ignoring internal control variables
      vars[name] = value
      vars.__LOCALS__[i] = name
    end
    i = i + 1
  end

  vars.__VARSLEVEL__ = level

  if func then
    --NB: Do not do this until finished filling the vars table
    setmetatable(vars, { __index = getfenv(func), __newindex = getfenv(func) })
  end

  --NB: Do not read or write the vars table anymore else the metatable functions will get invoked!

  --}}}

  local file = getinfo(lvl, &quot;source&quot;)
  if string.find(file, &quot;@&quot;) == 1 then
    file = string.sub(file, 2)
  end
  if IsWindows then file = string.lower(file) end

  if not line then
    line = getinfo(lvl, &quot;currentline&quot;)
  end

  return vars,file,line

end

--}}}
--{{{  local function restore_vars(ref,vars)

local function restore_vars(ref,vars)

  if type(vars) ~= &#39;table&#39; then return end

  local level = vars.__VARSLEVEL__       --NB: This level is relative to debug_hook offset by ref
  if not level then return end

  level = level + ref                    --NB: This includes an offset of +1 for the call to here

  local i
  local written_vars = {}

  i = 1
  while true do
    local name, value = debug.getlocal(level, i)
    if not name then break end
    if vars[name] and string.sub(name,1,1) ~= &#39;(&#39; then     --NB: ignoring internal control variables
      debug.setlocal(level, i, vars[name])
      written_vars[name] = true
    end
    i = i + 1
  end

  local ar = debug.getinfo(level, &quot;f&quot;)
  if not ar then return end

  local func = ar.func
  if func then

    i = 1
    while true do
      local name, value = debug.getupvalue(func, i)
      if not name then break end
      if vars[name] and string.sub(name,1,1) ~= &#39;(&#39; then   --NB: ignoring internal control variables
        if not written_vars[name] then
          debug.setupvalue(func, i, vars[name])
        end
        written_vars[name] = true
      end
      i = i + 1
    end

  end

end

--}}}
--{{{  local function trace_event(event, line, level)

local function print_trace(level,depth,event,file,line,name)

  --NB: level here is relative to the caller of trace_event, so offset by 2 to get to there
  level = level + 2

  local file = file or getinfo(level,&#39;short_src&#39;)
  local line = line or getinfo(level,&#39;currentline&#39;)
  local name = name or getinfo(level,&#39;name&#39;)

  local prefix = &#39;&#39;
  if current_thread ~= &#39;main&#39; then prefix = &#39;[&#39;..tostring(current_thread)..&#39;] &#39; end

  ctrlrDebugger:write(prefix..
           string.format(&#39;%08.2f:%02i.&#39;,os.clock(),depth)..
           string.rep(&#39;.&#39;,depth%32)..
           (file or &#39;&#39;)..&#39; (&#39;..(line or &#39;&#39;)..&#39;) &#39;..
           (name or &#39;&#39;)..
           &#39; (&#39;..event..&#39;)\n&#39;)

end

local function trace_event(event, line, level)

  if event == &#39;return&#39; and trace_returns then
    --note the line info for later
    ret_file = getinfo(level+1,&#39;short_src&#39;)
    ret_line = getinfo(level+1,&#39;currentline&#39;)
    ret_name = getinfo(level+1,&#39;name&#39;)
  end

  if event ~= &#39;line&#39; then return end

  local slevel = stack_level[current_thread]
  local tlevel = trace_level[current_thread]

  if trace_calls and slevel &gt; tlevel then
    --we are now in the function called, so look back 1 level further to find the calling file and line
    print_trace(level+1,slevel-1,&#39;c&#39;,nil,nil,getinfo(level+1,&#39;name&#39;))
  end

  if trace_returns and slevel &lt; tlevel then
    print_trace(level,slevel,&#39;r&#39;,ret_file,ret_line,ret_name)
  end

  if trace_lines then
    print_trace(level,slevel,&#39;l&#39;)
  end

  trace_level[current_thread] = stack_level[current_thread]

end

--}}}
--{{{  local function report(ev, vars, file, line, idx_watch)

local function report(ev, vars, file, line, idx_watch)
  local vars = vars or {}
  local file = file or &#39;?&#39;
  local line = line or 0
  local prefix = &#39;&#39;
  if current_thread ~= &#39;main&#39; then prefix = &#39;[&#39;..tostring(current_thread)..&#39;] &#39; end
  if ev == events.STEP then
    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..&#39; (&#39;..stack_level[current_thread]..&#39;)\n&#39;)
  elseif ev == events.BREAK then
    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..&#39; (&#39;..stack_level[current_thread]..&#39;) (breakpoint)\n&#39;)
  elseif ev == events.WATCH then
    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..&#39; (&#39;..stack_level[current_thread]..&#39;)&#39;..&quot; (watch expression &quot;..idx_watch.. &quot;: [&quot;..watches[idx_watch].exp..&quot;])\n&quot;)
  elseif ev == events.SET then
    --do nothing
  else
    ctrlrDebugger:write(prefix..&quot;Error in application: &quot;..file..&quot; line &quot;..line..&quot;\n&quot;)
  end
  if ev ~= events.SET then
    if pausemsg and pausemsg ~= &#39;&#39; then ctrlrDebugger:write(&#39;Message: &#39;..pausemsg..&#39;\n&#39;) end
    pausemsg = &#39;&#39;
  end
  return vars, file, line
end

--}}}

--{{{  local function debugger_loop(ev, vars, file, line, idx_watch)

local function debugger_loop(ev, vars, file, line, idx_watch)

  local eval_env  = vars or {}
  local breakfile = file or &#39;?&#39;
  local breakline = line or 0

  local command, args

  --{{{  local function getargs(spec)

  --get command arguments according to the given spec from the args string
  --the spec has a single character for each argument, arguments are separated
  --by white space, the spec characters can be one of:
  -- F for a filename    (defaults to breakfile if - given in args)
  -- L for a line number (defaults to breakline if - given in args)
  -- N for a number
  -- V for a variable name
  -- S for a string

  local function getargs(spec)
    local res={}
    local char,arg
    local ptr=1
    for i=1,string.len(spec) do
      char = string.sub(spec,i,i)
      if     char == &#39;F&#39; then
        _,ptr,arg = string.find(args..&#39; &#39;,&quot;%s*([%w%p]*)%s*&quot;,ptr)
        if not arg or arg == &#39;&#39; then arg = &#39;-&#39; end
        if arg == &#39;-&#39; then arg = breakfile end
      elseif char == &#39;L&#39; then
        _,ptr,arg = string.find(args..&#39; &#39;,&quot;%s*([%w%p]*)%s*&quot;,ptr)
        if not arg or arg == &#39;&#39; then arg = &#39;-&#39; end
        if arg == &#39;-&#39; then arg = breakline end
        arg = tonumber(arg) or 0
      elseif char == &#39;N&#39; then
        _,ptr,arg = string.find(args..&#39; &#39;,&quot;%s*([%w%p]*)%s*&quot;,ptr)
        if not arg or arg == &#39;&#39; then arg = &#39;0&#39; end
        arg = tonumber(arg) or 0
      elseif char == &#39;V&#39; then
        _,ptr,arg = string.find(args..&#39; &#39;,&quot;%s*([%w%p]*)%s*&quot;,ptr)
        if not arg or arg == &#39;&#39; then arg = &#39;&#39; end
      elseif char == &#39;S&#39; then
        _,ptr,arg = string.find(args..&#39; &#39;,&quot;%s*([%w%p]*)%s*&quot;,ptr)
        if not arg or arg == &#39;&#39; then arg = &#39;&#39; end
      else
        arg = &#39;&#39;
      end
      table.insert(res,arg or &#39;&#39;)
    end
    return unpack(res)
  end

  --}}}

  while true do
    -- io.write(&quot;[DEBUG]&gt; &quot;)
    ctrlrDebugger:write(&quot;[DEBUG]&gt; &quot;)
    -- local line = io.read(&quot;*line&quot;)
    local line = ctrlrDebugger:read()
    if line == nil then ctrlrDebugger:write(&#39;\n&#39;); line = &#39;exit&#39; end

    if string.find(line, &quot;^[a-z]+&quot;) then
      command = string.sub(line, string.find(line, &quot;^[a-z]+&quot;))
      args    = string.gsub(line,&quot;^[a-z]+%s*&quot;,&#39;&#39;,1)            --strip command off line
    else
      command = &#39;&#39;
    end

    if command == &quot;setb&quot; then
      --{{{  set breakpoint

      local line, filename  = getargs(&#39;LF&#39;)
      if filename ~= &#39;&#39; and line ~= &#39;&#39; then
        set_breakpoint(filename,line)
        ctrlrDebugger:write(&quot;Breakpoint set in file &quot;..filename..&#39; line &#39;..line..&#39;\n&#39;)
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end

      --}}}

    elseif command == &quot;delb&quot; then
      --{{{  delete breakpoint

      local line, filename = getargs(&#39;LF&#39;)
      if filename ~= &#39;&#39; and line ~= &#39;&#39; then
        remove_breakpoint(filename, line)
        ctrlrDebugger:write(&quot;Breakpoint deleted from file &quot;..filename..&#39; line &#39;..line..&quot;\n&quot;)
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end

      --}}}

    elseif command == &quot;delallb&quot; then
      --{{{  delete all breakpoints
      breakpoints = {}
      ctrlrDebugger:write(&#39;All breakpoints deleted\n&#39;)
      --}}}

    elseif command == &quot;listb&quot; then
      --{{{  list breakpoints
      for i, v in pairs(breakpoints) do
        for ii, vv in pairs(v) do
          ctrlrDebugger:write(&quot;Break at: &quot;..i..&#39; in &#39;..ii..&#39;\n&#39;)
        end
      end
      --}}}

    elseif command == &quot;setw&quot; then
      --{{{  set watch expression

      if args and args ~= &#39;&#39; then
        local func = loadstring(&quot;return(&quot; .. args .. &quot;)&quot;)
        local newidx = #watches + 1
        watches[newidx] = {func = func, exp = args}
        ctrlrDebugger:write(&quot;Set watch exp no. &quot; .. newidx..&#39;\n&#39;)
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end

      --}}}

    elseif command == &quot;delw&quot; then
      --{{{  delete watch expression

      local index = tonumber(args)
      if index then
        watches[index] = nil
        ctrlrDebugger:write(&quot;Watch expression deleted\n&quot;)
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end

      --}}}

    elseif command == &quot;delallw&quot; then
      --{{{  delete all watch expressions
      watches = {}
      ctrlrDebugger:write(&#39;All watch expressions deleted\n&#39;)
      --}}}

    elseif command == &quot;listw&quot; then
      --{{{  list watch expressions
      for i, v in pairs(watches) do
        ctrlrDebugger:write(&quot;Watch exp. &quot; .. i .. &quot;: &quot; .. v.exp..&#39;\n&#39;)
      end
      --}}}

    elseif command == &quot;run&quot; then
      --{{{  run until breakpoint
      step_into = false
      step_over = false
      return &#39;cont&#39;
      --}}}

    elseif command == &quot;step&quot; then
      --{{{  step N lines (into functions)
      local N = tonumber(args) or 1
      step_over  = false
      step_into  = true
      step_lines = tonumber(N or 1)
      return &#39;cont&#39;
      --}}}

    elseif command == &quot;over&quot; then
      --{{{  step N lines (over functions)
      local N = tonumber(args) or 1
      step_into  = false
      step_over  = true
      step_lines = tonumber(N or 1)
      step_level[current_thread] = stack_level[current_thread]
      return &#39;cont&#39;
      --}}}

    elseif command == &quot;out&quot; then
      --{{{  step N lines (out of functions)
      local N = tonumber(args) or 1
      step_into  = false
      step_over  = true
      step_lines = 1
      step_level[current_thread] = stack_level[current_thread] - tonumber(N or 1)
      return &#39;cont&#39;
      --}}}

    elseif command == &quot;gotoo&quot; then
      --{{{  step until reach line
      local line, filename = getargs(&#39;LF&#39;)
      if line ~= &#39;&#39; then
        step_over  = false
        step_into  = false
        if has_breakpoint(filename,line) then
          return &#39;cont&#39;
        else
          set_breakpoint(filename,line,true)
          return &#39;cont&#39;
        end
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end
      --}}}

    elseif command == &quot;set&quot; then
      --{{{  set/show context level
      local level = args
      if level and level == &#39;&#39; then level = nil end
      if level then return level end
      --}}}

    elseif command == &quot;vars&quot; then
      --{{{  list context variables
      local depth = args
      if depth and depth == &#39;&#39; then depth = nil end
      depth = tonumber(depth) or 1
      dumpvar(eval_env, depth+1, &#39;variables&#39;)
      --}}}

    elseif command == &quot;glob&quot; then
      --{{{  list global variables
      local depth = args
      if depth and depth == &#39;&#39; then depth = nil end
      depth = tonumber(depth) or 1
      dumpvar(eval_env.__GLOBALS__,depth+1,&#39;globals&#39;)
      --}}}

    elseif command == &quot;fenv&quot; then
      --{{{  list function environment variables
      local depth = args
      if depth and depth == &#39;&#39; then depth = nil end
      depth = tonumber(depth) or 1
      dumpvar(eval_env.__ENVIRONMENT__,depth+1,&#39;environment&#39;)
      --}}}

    elseif command == &quot;ups&quot; then
      --{{{  list upvalue names
      dumpvar(eval_env.__UPVALUES__,2,&#39;upvalues&#39;)
      --}}}

    elseif command == &quot;locs&quot; then
      --{{{  list locals names
      dumpvar(eval_env.__LOCALS__,2,&#39;upvalues&#39;)
      --}}}

    elseif command == &quot;what&quot; then
      --{{{  show where a function is defined
      if args and args ~= &#39;&#39; then
        local v = eval_env
        local n = nil
        for w in string.gmatch(args,&quot;[%w_]+&quot;) do
          v = v[w]
          if n then n = n..&#39;.&#39;..w else n = w end
          if not v then break end
        end
        if type(v) == &#39;function&#39; then
          local def = debug.getinfo(v,&#39;S&#39;)
          if def then
            ctrlrDebugger:write(def.what..&#39; in &#39;..def.short_src..&#39; &#39;..def.linedefined..&#39;..&#39;..def.lastlinedefined..&#39;\n&#39;)
          else
            ctrlrDebugger:write(&#39;Cannot get info for &#39;..v..&#39;\n&#39;)
          end
        else
          ctrlrDebugger:write(v..&#39; is not a function\n&#39;)
        end
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end
      --}}}

    elseif command == &quot;dump&quot; then
      --{{{  dump a variable
      local name, depth = getargs(&#39;VN&#39;)
      if name ~= &#39;&#39; then
        if depth == &#39;&#39; or depth == 0 then depth = nil end
        depth = tonumber(depth or 1)
        local v = eval_env
        local n = nil
        for w in string.gmatch(name,&quot;[^%.]+&quot;) do     --get everything between dots
          if tonumber(w) then
            v = v[tonumber(w)]
          else
            v = v[w]
          end
          if n then n = n..&#39;.&#39;..w else n = w end
          if not v then break end
        end
        dumpvar(v,depth+1,n)
      else
        ctrlrDebugger:write(&quot;Bad request\n&quot;)
      end
      --}}}

    elseif command == &quot;show&quot; then
      --{{{  show file around a line or the current breakpoint

      local line, file, before, after = getargs(&#39;LFNN&#39;)
      if before == 0 then before = 10     end
      if after  == 0 then after  = before end

      if file ~= &#39;&#39; and file ~= &quot;=stdin&quot; then
        show(file,line,before,after)
      else
        ctrlrDebugger:write(&#39;Nothing to show\n&#39;)
      end

      --}}}

    elseif command == &quot;poff&quot; then
      --{{{  turn pause command off
      pause_off = true
      --}}}

    elseif command == &quot;pon&quot; then
      --{{{  turn pause command on
      pause_off = false
      --}}}

    elseif command == &quot;tron&quot; then
      --{{{  turn tracing on/off
      local option = getargs(&#39;S&#39;)
      trace_calls   = false
      trace_returns = false
      trace_lines   = false
      if string.find(option,&#39;c&#39;) then trace_calls   = true end
      if string.find(option,&#39;r&#39;) then trace_returns = true end
      if string.find(option,&#39;l&#39;) then trace_lines   = true end
      --}}}

    elseif command == &quot;trace&quot; then
      --{{{  dump a stack trace
      trace(eval_env.__VARSLEVEL__)
      --}}}

    elseif command == &quot;info&quot; then
      --{{{  dump all debug info captured
      info()
      --}}}

    elseif command == &quot;pause&quot; then
      --{{{  not allowed in here
      ctrlrDebugger:write(&#39;pause() should only be used in the script you are debugging\n&#39;)
      --}}}

    elseif command == &quot;help&quot; then
      --{{{  help
      local command = getargs(&#39;S&#39;)
      if command ~= &#39;&#39; and hints[command] then
        ctrlrDebugger:write(hints[command]..&#39;\n&#39;)
      else
        for _,v in pairs(hints) do
          local _,_,h = string.find(v,&quot;(.+)|&quot;)
          ctrlrDebugger:write(h..&#39;\n&#39;)
        end
      end
      --}}}

    elseif command == &quot;exit&quot; then
      --{{{  exit debugger
      return &#39;stop&#39;
      --}}}

    elseif line ~= &#39;&#39; then
      --{{{  just execute whatever it is in the current context

      --map line starting with &quot;=...&quot; to &quot;return ...&quot;
      if string.sub(line,1,1) == &#39;=&#39; then line = string.gsub(line,&#39;=&#39;,&#39;return &#39;,1) end

      local ok, func = pcall(loadstring,line)
      if func == nil then                             --Michael.Bringmann@lsi.com
        ctrlrDebugger:write(&quot;Compile error: &quot;..line..&#39;\n&#39;)
      elseif not ok then
        ctrlrDebugger:write(&quot;Compile error: &quot;..func..&#39;\n&#39;)
      else
        setfenv(func, eval_env)
        local res = {pcall(func)}
        if res[1] then
          if res[2] then
            table.remove(res,1)
            for _,v in ipairs(res) do
              ctrlrDebugger:write(tostring(v))
              ctrlrDebugger:write(&#39;\t&#39;)
            end
            ctrlrDebugger:write(&#39;\n&#39;)
          end
          --update in the context
          return 0
        else
          ctrlrDebugger:write(&quot;Run error: &quot;..res[2]..&#39;\n&#39;)
        end
      end

      --}}}
    end
  end

end

--}}}
--{{{  local function debug_hook(event, line, level, thread)

local function debug_hook(event, line, level, thread)
  if not started then debug.sethook(); coro_debugger = nil; return end
  current_thread = thread or &#39;main&#39;
  local level = level or 2
  trace_event(event,line,level)
  if event == &quot;call&quot; then
    stack_level[current_thread] = stack_level[current_thread] + 1
  elseif event == &quot;return&quot; then
    stack_level[current_thread] = stack_level[current_thread] - 1
    if stack_level[current_thread] &lt; 0 then stack_level[current_thread] = 0 end
  else
    local vars,file,line = capture_vars(level,1,line)
    local stop, ev, idx = false, events.STEP, 0
    while true do
      for index, value in pairs(watches) do
        setfenv(value.func, vars)
        local status, res = pcall(value.func)
        if status and res then
          ev, idx = events.WATCH, index
          stop = true
          break
        end
      end
      if stop then break end
      if (step_into)
      or (step_over and (stack_level[current_thread] &lt;= step_level[current_thread] or stack_level[current_thread] == 0)) then
        step_lines = step_lines - 1
        if step_lines &lt; 1 then
          ev, idx = events.STEP, 0
          break
        end
      end
      if has_breakpoint(file, line) then
        ev, idx = events.BREAK, 0
        break
      end
      return
    end
    if not coro_debugger then
      ctrlrDebugger:write(&quot;Lua Debugger\n&quot;)
      vars, file, line = report(ev, vars, file, line, idx)
      ctrlrDebugger:write(&quot;Type &#39;help&#39; for commands\n&quot;)
      coro_debugger = true
    else
      vars, file, line = report(ev, vars, file, line, idx)
    end
    tracestack(level)
    local last_next = 1
    local next = &#39;ask&#39;
    local silent = false
    while true do
      if next == &#39;ask&#39; then
        next = debugger_loop(ev, vars, file, line, idx)
      elseif next == &#39;cont&#39; then
        return
      elseif next == &#39;stop&#39; then
        started = false
        debug.sethook()
        coro_debugger = nil
        return
      elseif tonumber(next) then --get vars for given level or last level
        next = tonumber(next)
        if next == 0 then silent = true; next = last_next else silent = false end
        last_next = next
        restore_vars(level,vars)
        vars, file, line = capture_vars(level,next)
        if not silent then
          if vars and vars.__VARSLEVEL__ then
            ctrlrDebugger:write(&#39;Level: &#39;..vars.__VARSLEVEL__..&#39;\n&#39;)
          else
            ctrlrDebugger:write(&#39;No level set\n&#39;)
          end
        end
        ev = events.SET
        next = &#39;ask&#39;
      else
        ctrlrDebugger:write(&#39;Unknown command from debugger_loop: &#39;..tostring(next)..&#39;\n&#39;)
        ctrlrDebugger:write(&#39;Stopping debugger\n&#39;)
        next = &#39;stop&#39;
      end
    end
  end
end

--}}}

--{{{  coroutine.create

--This function overrides the built-in for the purposes of propagating
--the debug hook settings from the creator into the created coroutine.

_G.coroutine.create = function(f)
  local thread
  local hook, mask, count = debug.gethook()
  if hook then
    local function thread_hook(event,line)
      hook(event,line,3,thread)
    end
    thread = cocreate(function(...)
                        stack_level[thread] = 0
                        trace_level[thread] = 0
                        step_level [thread] = 0
                        debug.sethook(thread_hook,mask,count)
                        return f(...)
                      end)
    return thread
  else
    return cocreate(f)
  end
end

--}}}
--{{{  coroutine.wrap

--This function overrides the built-in for the purposes of propagating
--the debug hook settings from the creator into the created coroutine.

_G.coroutine.wrap = function(f)
  local thread
  local hook, mask, count = debug.gethook()
  if hook then
    local function thread_hook(event,line)
      hook(event,line,3,thread)
    end
    thread = cowrap(function(...)
                      stack_level[thread] = 0
                      trace_level[thread] = 0
                      step_level [thread] = 0
                      debug.sethook(thread_hook,mask,count)
                      return f(...)
                    end)
    return thread
  else
    return cowrap(f)
  end
end

--}}}

--{{{  function pause(x,l,f)

--
-- Starts/resumes a debug session
--

function pause(x,l,f)
  if not f and pause_off then return end       --being told to ignore pauses
  pausemsg = x or &#39;pause&#39;
  local lines
  local src = getinfo(2,&#39;short_src&#39;)
  if l then
    lines = l   --being told when to stop
  elseif src == &quot;stdin&quot; then
    lines = 1   --if in a console session, stop now
  else
    lines = 2   --if in a script, stop when get out of pause()
  end
  if started then
    --we&#39;ll stop now &#39;cos the existing debug hook will grab us
    step_lines = lines
    step_into  = true
    debug.sethook(debug_hook, &quot;crl&quot;)         --reset it in case some external agent fiddled with it
  else
    --set to stop when get out of pause()
    trace_level[current_thread] = 0
    step_level [current_thread] = 0
    stack_level[current_thread] = 1
    step_lines = lines
    step_into  = true
    started    = true
    debug.sethook(debug_hook, &quot;crl&quot;)         --NB: this will cause an immediate entry to the debugger_loop
  end
end

--}}}
--{{{  function dump(v,depth)

--shows the value of the given variable, only really useful
--when the variable is a table
--see dump debug command hints for full semantics

function dump(v,depth)
  dumpvar(v,(depth or 1)+1,tostring(v))
end

--}}}
--{{{  function debug.traceback(x)

local _traceback = debug.traceback       --note original function

--override standard function
debug.traceback = function(x)
  local assertmsg = _traceback(x)        --do original function
  pause(x)                               --let user have a look at stuff
  return assertmsg                       --carry on
end

_TRACEBACK = debug.traceback             --Lua 5.0 function

--}}}"
                   luaMethodLinkedProperty=""
                   luaMethodName="debugger.lua"
                   luaMethodSource="0"
                   luaMethodValid="1"
                   uuid="00000000000000000000000000000005" />
        <luaMethod luaMethodCode="function getInspect()
local inspect ={
  _VERSION = &#39;inspect.lua 3.0.0&#39;,
  _URL     = &#39;http://github.com/kikito/inspect.lua&#39;,
  _DESCRIPTION = &#39;human-readable representations of tables&#39;,
  _LICENSE = [[
    MIT LICENSE

    Copyright (c) 2013 Enrique Garcia Cota

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the
    &quot;Software&quot;), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ]]
}

inspect.KEY       = setmetatable({}, {__tostring = function() return &#39;inspect.KEY&#39; end})
inspect.METATABLE = setmetatable({}, {__tostring = function() return &#39;inspect.METATABLE&#39; end})

-- Apostrophizes the string if it has quotes, but not aphostrophes
-- Otherwise, it returns a regular quoted string
local function smartQuote(str)
  if str:match(&#39;&quot;&#39;) and not str:match(&quot;&#39;&quot;) then
    return &quot;&#39;&quot; .. str .. &quot;&#39;&quot;
  end
  return &#39;&quot;&#39; .. str:gsub(&#39;&quot;&#39;, &#39;\\&quot;&#39;) .. &#39;&quot;&#39;
end

local controlCharsTranslation = {
  [&quot;\a&quot;] = &quot;\\a&quot;,  [&quot;\b&quot;] = &quot;\\b&quot;, [&quot;\f&quot;] = &quot;\\f&quot;,  [&quot;\n&quot;] = &quot;\\n&quot;,
  [&quot;\r&quot;] = &quot;\\r&quot;,  [&quot;\t&quot;] = &quot;\\t&quot;, [&quot;\v&quot;] = &quot;\\v&quot;
}

local function escape(str)
  local result = str:gsub(&quot;\\&quot;, &quot;\\\\&quot;):gsub(&quot;(%c)&quot;, controlCharsTranslation)
  return result
end

local function isIdentifier(str)
  return type(str) == &#39;string&#39; and str:match( &quot;^[_%a][_%a%d]*$&quot; )
end

local function isSequenceKey(k, length)
  return type(k) == &#39;number&#39;
     and 1 &lt;= k
     and k &lt;= length
     and math.floor(k) == k
end

local defaultTypeOrders = {
  [&#39;number&#39;]   = 1, [&#39;boolean&#39;]  = 2, [&#39;string&#39;] = 3, [&#39;table&#39;] = 4,
  [&#39;function&#39;] = 5, [&#39;userdata&#39;] = 6, [&#39;thread&#39;] = 7
}

local function sortKeys(a, b)
  local ta, tb = type(a), type(b)

  -- strings and numbers are sorted numerically/alphabetically
  if ta == tb and (ta == &#39;string&#39; or ta == &#39;number&#39;) then return a &lt; b end

  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]
  -- Two default types are compared according to the defaultTypeOrders table
  if dta and dtb then return defaultTypeOrders[ta] &lt; defaultTypeOrders[tb]
  elseif dta     then return true  -- default types before custom ones
  elseif dtb     then return false -- custom types after default ones
  end

  -- custom types are sorted out alphabetically
  return ta &lt; tb
end

local function getNonSequentialKeys(t)
  local keys, length = {}, #t
  for k,_ in pairs(t) do
    if not isSequenceKey(k, length) then table.insert(keys, k) end
  end
  table.sort(keys, sortKeys)
  return keys
end

local function getToStringResultSafely(t, mt)
  local __tostring = type(mt) == &#39;table&#39; and rawget(mt, &#39;__tostring&#39;)
  local str, ok
  if type(__tostring) == &#39;function&#39; then
    ok, str = pcall(__tostring, t)
    str = ok and str or &#39;error: &#39; .. tostring(str)
  end
  if type(str) == &#39;string&#39; and #str &gt; 0 then return str end
end

local maxIdsMetaTable = {
  __index = function(self, typeName)
    rawset(self, typeName, 0)
    return 0
  end
}

local idsMetaTable = {
  __index = function (self, typeName)
    local col = setmetatable({}, {__mode = &quot;kv&quot;})
    rawset(self, typeName, col)
    return col
  end
}

local function countTableAppearances(t, tableAppearances)
  tableAppearances = tableAppearances or setmetatable({}, {__mode = &quot;k&quot;})

  if type(t) == &#39;table&#39; then
    if not tableAppearances[t] then
      tableAppearances[t] = 1
      for k,v in pairs(t) do
        countTableAppearances(k, tableAppearances)
        countTableAppearances(v, tableAppearances)
      end
      countTableAppearances(getmetatable(t), tableAppearances)
    else
      tableAppearances[t] = tableAppearances[t] + 1
    end
  end

  return tableAppearances
end

local copySequence = function(s)
  local copy, len = {}, #s
  for i=1, len do copy[i] = s[i] end
  return copy, len
end

local function makePath(path, ...)
  local keys = {...}
  local newPath, len = copySequence(path)
  for i=1, #keys do
    newPath[len + i] = keys[i]
  end
  return newPath
end

local function processRecursive(process, item, path)
  if item == nil then return nil end

  local processed = process(item, path)
  if type(processed) == &#39;table&#39; then
    local processedCopy = {}
    local processedKey

    for k,v in pairs(processed) do
      processedKey = processRecursive(process, k, makePath(path, k, inspect.KEY))
      if processedKey ~= nil then
        processedCopy[processedKey] = processRecursive(process, v, makePath(path, processedKey))
      end
    end

    local mt  = processRecursive(process, getmetatable(processed), makePath(path, inspect.METATABLE))
    setmetatable(processedCopy, mt)
    processed = processedCopy
  end
  return processed
end


-------------------------------------------------------------------

local Inspector = {}
local Inspector_mt = {__index = Inspector}

function Inspector:puts(...)
  local args   = {...}
  local buffer = self.buffer
  local len    = #buffer
  for i=1, #args do
    len = len + 1
    buffer[len] = tostring(args[i])
  end
end

function Inspector:down(f)
  self.level = self.level + 1
  f()
  self.level = self.level - 1
end

function Inspector:tabify()
  self:puts(self.newline, string.rep(self.indent, self.level))
end

function Inspector:alreadyVisited(v)
  return self.ids[type(v)][v] ~= nil
end

function Inspector:getId(v)
  local tv = type(v)
  local id = self.ids[tv][v]
  if not id then
    id              = self.maxIds[tv] + 1
    self.maxIds[tv] = id
    self.ids[tv][v] = id
  end
  return id
end

function Inspector:putKey(k)
  if isIdentifier(k) then return self:puts(k) end
  self:puts(&quot;[&quot;)
  self:putValue(k)
  self:puts(&quot;]&quot;)
end

function Inspector:putTable(t)
  if t == inspect.KEY or t == inspect.METATABLE then
    self:puts(tostring(t))
  elseif self:alreadyVisited(t) then
    self:puts(&#39;&lt;table &#39;, self:getId(t), &#39;&gt;&#39;)
  elseif self.level &gt;= self.depth then
    self:puts(&#39;{...}&#39;)
  else
    if self.tableAppearances[t] &gt; 1 then self:puts(&#39;&lt;&#39;, self:getId(t), &#39;&gt;&#39;) end

    local nonSequentialKeys = getNonSequentialKeys(t)
    local length            = #t
    local mt                = getmetatable(t)
    local toStringResult    = getToStringResultSafely(t, mt)

    self:puts(&#39;{&#39;)
    self:down(function()
      if toStringResult then
        self:puts(&#39; -- &#39;, escape(toStringResult))
        if length &gt;= 1 then self:tabify() end
      end

      local count = 0
      for i=1, length do
        if count &gt; 0 then self:puts(&#39;,&#39;) end
        self:puts(&#39; &#39;)
        self:putValue(t[i])
        count = count + 1
      end

      for _,k in ipairs(nonSequentialKeys) do
        if count &gt; 0 then self:puts(&#39;,&#39;) end
        self:tabify()
        self:putKey(k)
        self:puts(&#39; = &#39;)
        self:putValue(t[k])
        count = count + 1
      end

      if mt then
        if count &gt; 0 then self:puts(&#39;,&#39;) end
        self:tabify()
        self:puts(&#39;&lt;metatable&gt; = &#39;)
        self:putValue(mt)
      end
    end)

    if #nonSequentialKeys &gt; 0 or mt then -- result is multi-lined. Justify closing }
      self:tabify()
    elseif length &gt; 0 then -- array tables have one extra space before closing }
      self:puts(&#39; &#39;)
    end

    self:puts(&#39;}&#39;)
  end
end

function Inspector:putValue(v)
  local tv = type(v)

  if tv == &#39;string&#39; then
    self:puts(smartQuote(escape(v)))
  elseif tv == &#39;number&#39; or tv == &#39;boolean&#39; or tv == &#39;nil&#39; then
    self:puts(tostring(v))
  elseif tv == &#39;table&#39; then
    self:putTable(v)
  else
    self:puts(&#39;&lt;&#39;,tv,&#39; &#39;,self:getId(v),&#39;&gt;&#39;)
  end
end

-------------------------------------------------------------------

function inspect.inspect(root, options)
  options       = options or {}

  local depth   = options.depth   or math.huge
  local newline = options.newline or &#39;\n&#39;
  local indent  = options.indent  or &#39;  &#39;
  local process = options.process

  if process then
    root = processRecursive(process, root, {})
  end

  local inspector = setmetatable({
    depth            = depth,
    buffer           = {},
    level            = 0,
    ids              = setmetatable({}, idsMetaTable),
    maxIds           = setmetatable({}, maxIdsMetaTable),
    newline          = newline,
    indent           = indent,
    tableAppearances = countTableAppearances(root)
  }, Inspector_mt)

  inspector:putValue(root)

  return table.concat(inspector.buffer)
end

setmetatable(inspect, { __call = function(_, ...) return inspect.inspect(...) end })

return inspect
end

inspect = getInspect()"
                   luaMethodLinkedProperty=""
                   luaMethodName="inspect"
                   luaMethodSource="0"
                   luaMethodValid="1"
                   uuid="00000000000000000000000000000006" />
      </luaMethodGroup>
      <luaMethod luaMethodCode="--
-- Called when a panel loaded 
function panelCreated()
	VoiceBankData = nil
	Voice_SelectedPatchIndex = 0

	createEffectParameterDefinitions()

	timer:setCallback (33, panelLoadedCallback)
	timer:startTimer(33, 200)


end"
                 luaMethodLinkedProperty=""
                 luaMethodName="panelCreated"
                 luaMethodSource="0"
                 luaMethodValid="1"
                 uuid="c98fa6723d884c98ac61f65ff3154706" />
      <luaMethod luaMethodCode="function panelLoadedCallback()
	panel_loaded = 1
	timer:stopTimer(33)
end"
                 luaMethodLinkedProperty=""
                 luaMethodName="panelLoadedCallback"
                 luaMethodSource="0"
                 luaMethodValid="1"
                 uuid="b0fee711c77e44d396fb3b74b781a70f" />
      <luaMethod luaMethodCode="function beforePanelCreated()
	panel_loaded = 0
end"
                 luaMethodLinkedProperty=""
                 luaMethodName="beforePanelCreated"
                 luaMethodSource="0"
                 luaMethodValid="1"
                 uuid="8e2f674ee38a4d28af12beb2fe5ed5ff" />
      <luaMethod luaMethodCode="function createEffectParameterDefinitions()
	Voice_EffectParamDefinitions = {
		[&quot;AM Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;AMP Type&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 3 },
		[&quot;Cch Delay&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 7150 },
		[&quot;Cch Level&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Cutoff Frequency Offset&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Delay Offset&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Delay Offset&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Delay Offset2&quot;] = { [&quot;name&quot;] = &quot;Delay Offset&quot;, [&quot;min&quot;] = 0, [&quot;max&quot;] = 63 },
		[&quot;Delay Time&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Delay2 Level&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Density&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 3 },
		[&quot;Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 104 },
		[&quot;Diffusion&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 1 },
		[&quot;Diffusion2&quot;] = { [&quot;name&quot;] = &quot;Diffusion&quot;, [&quot;min&quot;] = 0, [&quot;max&quot;] = 10 },
		[&quot;Drive&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Dry/Wet&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 127 },
		[&quot;EQ High Frequency&quot;] = { [&quot;min&quot;] = 28, [&quot;max&quot;] = 58 },
		[&quot;EQ High Gain&quot;] = { [&quot;min&quot;] = 52, [&quot;max&quot;] = 76 },
		[&quot;EQ Low Frequency&quot;] = { [&quot;min&quot;] = 8, [&quot;max&quot;] = 40 },
		[&quot;EQ Low Gain&quot;] = { [&quot;min&quot;] = 52, [&quot;max&quot;] = 76 },
		[&quot;EQ Mid Frequency&quot;] = { [&quot;min&quot;] = 28, [&quot;max&quot;] = 54 },
		[&quot;EQ Mid Gain&quot;] = { [&quot;min&quot;] = 52, [&quot;max&quot;] = 76 },
		[&quot;EQ Mid Width&quot;] = { [&quot;min&quot;] = 10, [&quot;max&quot;] = 120 },
		[&quot;Edge(Clip Curve)&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Er/ Reverb Balance&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 127 },
		[&quot;F/R Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Feedback Delay 1&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 7150 },
		[&quot;Feedback Delay 2&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 7150 },
		[&quot;Feedback Delay&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 7150 },
		[&quot;Feedback Level2&quot;] = { [&quot;name&quot;] = &quot;Feedback Level&quot;, [&quot;min&quot;] = 0, [&quot;max&quot;] = 69 },
		[&quot;Feedback Level&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 127 },
		[&quot;HPF Cutoff&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 52 },
		[&quot;Height&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 73 },
		[&quot;High Damp&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 10 },
		[&quot;Initial Delay&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 63 },
		[&quot;Input Mode&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 1 },
		[&quot;Input Select&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 2 },
		[&quot;L-&gt;R Delay&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 3550 },
		[&quot;L/R Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;LFO Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;LFO Frequency&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;LFO PM Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;LFO Phase Difference&quot;] = { [&quot;min&quot;] = 4, [&quot;max&quot;] = 124 },
		[&quot;LPF Cutoff&quot;] = { [&quot;min&quot;] = 34, [&quot;max&quot;] = 60 },
		[&quot;Lch Delay&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 7150 },
		[&quot;Lch Delay1&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 3550 },
		[&quot;Lch Delay2&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 3550 },
		[&quot;Lch Feedback Level&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 127 },
		[&quot;Liveness&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 10 },
		[&quot;Output Level&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;PAN Direction&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 5 },
		[&quot;PM Depth&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;Phase Shift Offset&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 127 },
		[&quot;R-&gt;L Delay&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 3550 },
		[&quot;Rch Delay&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 7150 },
		[&quot;Rch Delay1&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 3550 },
		[&quot;Rch Delay2&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 3550 },
		[&quot;Rch Feedback Level&quot;] = { [&quot;min&quot;] = 1, [&quot;max&quot;] = 127 },
		[&quot;Resonance&quot;] = { [&quot;min&quot;] = 10, [&quot;max&quot;] = 120 },
		[&quot;Reverb Delay&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 63 },
		[&quot;Reverb Time&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 69 },
		[&quot;Room Size&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 44 },
		[&quot;Stage&quot;] = { [&quot;min&quot;] = 3, [&quot;max&quot;] = 10 },
		[&quot;Type&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 1 },
		[&quot;Type2&quot;] = { [&quot;name&quot;] = &quot;Type&quot;, [&quot;min&quot;] = 0, [&quot;max&quot;] = 5 },
		[&quot;Wall Vary&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 30 },
		[&quot;Width&quot;] = { [&quot;min&quot;] = 0, [&quot;max&quot;] = 37 }
	}

	-- HALL1, HALL2, ROOM1, ROOM2, ROOM3, STAGE1, STAGE2, PLATE
	Voice_EffectGroup1 = { 
		[1] = &quot;Reverb Time&quot;,
		[2] = &quot;Diffusion2&quot;,
		[3] = &quot;Initial Delay&quot;,
		[4] = &quot;HPF Cutoff&quot;,
		[5] = &quot;LPF Cutoff&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Rev Delay&quot;,
		[12] = &quot;Density&quot;,
		[13] = &quot;Er/ Rev Balance&quot;,
		[15] = &quot;Feedback Level&quot;
	}

	-- WHITE ROOM, TUNNEL, BASEMENT
	Voice_EffectGroup2 = { 
		[1] = &quot;Reverb Time&quot;,
		[2] = &quot;Diffusion2&quot;,
		[3] = &quot;Initial Delay&quot;,
		[4] = &quot;HPF Cutoff&quot;,
		[5] = &quot;LPF Cutoff&quot;,
		[6] = &quot;Width&quot;,
		[7] = &quot;Heigt&quot;,
		[8] = &quot;Depth&quot;,
		[9] = &quot;Wall Vary&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Rev Delay&quot;,
		[12] = &quot;Density&quot;,
		[13] = &quot;Er/ Rev Balance&quot;,
		[15] = &quot;Feedback Level&quot;
	}

	-- DELAY L,C,R
	Voice_EffectGroup3 = { 
		[1] = &quot;Lch Delay&quot;,
		[2] = &quot;Rch Delay&quot;,
		[3] = &quot;Cch Delay&quot;,
		[4] = &quot;Feedback Delay&quot;,
		[5] = &quot;Feedback Level&quot;,
		[6] = &quot;Cch Level&quot;,
		[7] = &quot;High Damp&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[13] = &quot;EQ Low Frequency&quot;,
		[14] = &quot;EQ Low Gain&quot;,
		[15] = &quot;EQ High Frequency&quot;,
		[16] = &quot;EQ High Gain&quot;
	}

	-- DELAY L,R
	Voice_EffectGroup4 = { 
		[1] = &quot;Lch Delay&quot;,
		[2] = &quot;Rch Delay&quot;,
		[3] = &quot;Feedback Delay 1&quot;,
		[4] = &quot;Feedback Delay 2&quot;,
		[5] = &quot;Feedback Level&quot;,
		[6] = &quot;High Damp&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[13] = &quot;EQ Low Frequency&quot;,
		[14] = &quot;EQ Low Gain&quot;,
		[15] = &quot;EQ High Frequency&quot;,
		[16] = &quot;EQ High Gain&quot;
	}

	-- ECHO
	Voice_EffectGroup5 = { 
		[1] = &quot;Lch Delay1&quot;,
		[2] = &quot;Lch Feedback Level&quot;,
		[3] = &quot;Rch Delay1&quot;,
		[4] = &quot;Rch Feedback Level&quot;,
		[5] = &quot;High Damp&quot;,
		[6] = &quot;Lch Delay2&quot;,
		[7] = &quot;Rch Delay2&quot;,
		[8] = &quot;Delay2 Level&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[13] = &quot;EQ Low Frequency&quot;,
		[14] = &quot;EQ Low Gain&quot;,
		[15] = &quot;EQ High Frequency&quot;,
		[16] = &quot;EQ High Gain&quot;
	}

	-- CROSS DELAY
	Voice_EffectGroup6 = { 
		[1] = &quot;L-&gt;R Delay&quot;,
		[2] = &quot;R-&gt;L Delay&quot;,
		[3] = &quot;Feedback Level&quot;,
		[4] = &quot;Input Select&quot;,
		[5] = &quot;High Damp&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[13] = &quot;EQ Low Frequency&quot;,
		[14] = &quot;EQ Low Gain&quot;,
		[15] = &quot;EQ High Frequency&quot;,
		[16] = &quot;EQ High Gain&quot;
	}

	-- EARLY REF1, EARLY REF2
	Voice_EffectGroup7 = { 
		[1] = &quot;Type2&quot;,
		[2] = &quot;Room Size&quot;,
		[3] = &quot;Diffusion2&quot;,
		[4] = &quot;Initial Delay&quot;,
		[5] = &quot;Feedback Level&quot;,
		[6] = &quot;HPF Cutoff&quot;,
		[7] = &quot;LPF Cutoff&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Liveness&quot;,
		[12] = &quot;Density&quot;,
		[13] = &quot;High Damp&quot;
	}

	-- GATE REVERB, REVERSE GATE
	Voice_EffectGroup8 = { 
		[1] = &quot;Type&quot;,
		[2] = &quot;Room Size&quot;,
		[3] = &quot;Diffusion2&quot;,
		[4] = &quot;Initial Delay&quot;,
		[5] = &quot;Feedback Level&quot;,
		[6] = &quot;HPF Cutoff&quot;,
		[7] = &quot;LPF Cutoff&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Liveness&quot;,
		[12] = &quot;Density&quot;,
		[13] = &quot;High Damp&quot;
	}

	-- KARAOKE1,2,3
	Voice_EffectGroup9 = { 
		[1] = &quot;Delay Time&quot;,
		[2] = &quot;Feedback Level&quot;,
		[3] = &quot;HPF Cutoff&quot;,
		[4] = &quot;LPF Cutoff&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[14] = &quot;LFO Phase Difference&quot;
	}

	-- CHORUS1,2,3,4, CELESTE1,2,3,4
	Voice_EffectGroup10 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;LFO PM Depth&quot;,
		[3] = &quot;Feedback Level&quot;,
		[4] = &quot;Delay Offset&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[15] = &quot;Input Mode&quot;
	}

	-- FLANGER1, FLANGER2, FLANGER3
	Voice_EffectGroup11 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;LFO Depth&quot;,
		[3] = &quot;Feedback Level&quot;,
		[4] = &quot;Delay Offset2&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[10] = &quot;Dry/Wet&quot;
	}

	-- SYMPHONIC
	Voice_EffectGroup12 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;LFO Depth&quot;,
		[3] = &quot;Delay Offset&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[10] = &quot;Dry/Wet&quot;
	}

	-- ROTARY SPEAKER
	Voice_EffectGroup13 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;LFO Depth&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[10] = &quot;Dry/Wet&quot;
	}

	-- TREMOLO
	Voice_EffectGroup14 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;AM Depth&quot;,
		[3] = &quot;PM Depth&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[14] = &quot;LFO Phase Difference&quot;,
		[15] = &quot;Input Mode&quot;
	}

	-- AUTO PAN
	Voice_EffectGroup15 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;L/R Depth&quot;,
		[3] = &quot;F/R Depth&quot;,
		[4] = &quot;PAN Direction&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;
	}

	-- PHASER1, PHASER2
	Voice_EffectGroup16 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;LFO Depth&quot;,
		[3] = &quot;Phase Shift Offset&quot;,
		[4] = &quot;Feedback Level&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Stage 6~10(phaser1) /&quot;,
		[12] = &quot;Diffusion&quot;,
		[13] = &quot;LFO Phase Difference&quot;
	}

	-- DISTORTION, OVERDRIVE
	Voice_EffectGroup17 = { 
		[1] = &quot;Drive&quot;,
		[2] = &quot;EQ Low Frequency&quot;,
		[3] = &quot;EQ Low Gain&quot;,
		[4] = &quot;LPF Cutoff&quot;,
		[5] = &quot;Output Level&quot;,
		[7] = &quot;EQ Mid Frequency&quot;,
		[8] = &quot;EQ Mid Gain&quot;,
		[9] = &quot;EQ Mid Width&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Edge(Clip Curve) 0~127 0-127&quot;
	}

	-- GUITAR AMP SIMULATOR
	Voice_EffectGroup18 = { 
		[1] = &quot;Drive&quot;,
		[2] = &quot;AMP Type&quot;,
		[3] = &quot;LPF Cutoff&quot;,
		[4] = &quot;Output Level&quot;,
		[10] = &quot;Dry/Wet&quot;,
		[11] = &quot;Edge(Clip Curve) 0~127 0-127&quot;
	}

	-- MONO EQ(3-BAND)
	Voice_EffectGroup19 = { 
		[1] = &quot;EQ Low Gain&quot;,
		[2] = &quot;EQ Mid Frequency&quot;,
		[3] = &quot;EQ Mid Gain&quot;,
		[4] = &quot;EQ Mid Width&quot;,
		[5] = &quot;EQ High Gain&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ High Frequency&quot;
	}

	-- STEREO EQ(2-BAND)
	Voice_EffectGroup20 = { 
		[1] = &quot;EQ Low Frequency&quot;,
		[2] = &quot;EQ Low Gain&quot;,
		[3] = &quot;EQ High Frequency&quot;,
		[4] = &quot;EQ High Gain&quot;
	}

	-- AUTO WAH
	Voice_EffectGroup21 = { 
		[1] = &quot;LFO Frequency&quot;,
		[2] = &quot;LFO Depth&quot;,
		[3] = &quot;Cutoff Frequency Offset&quot;,
		[4] = &quot;Resonance&quot;,
		[6] = &quot;EQ Low Frequency&quot;,
		[7] = &quot;EQ Low Gain&quot;,
		[8] = &quot;EQ High Frequency&quot;,
		[9] = &quot;EQ High Gain&quot;,
		[10] = &quot;Dry/Wet&quot;
	}

end"
                 luaMethodLinkedProperty=""
                 luaMethodName="createEffectParameterDefinitions"
                 luaMethodSource="0"
                 luaMethodValid="1"
                 uuid="beeb6a1b788343aeb7533304841c5ad5" />
    </luaManagerMethods>
  </luaManager>
  <panelResources />
  <uiPanelEditor luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None"
                 luaPanelFileDragExitHandler="-- None"
                 luaPanelPaintBackground="-- None"
                 luaPanelResized="-- None"
                 name="Yamaha CS1x"
                 uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="0xffffffff"
                 uiPanelBackgroundColour2="0xffffffff"
                 uiPanelBackgroundGradientType="1"
                 uiPanelCanvasRectangle="0 0 1217 712"
                 uiPanelDisabledOnEdit="0"
                 uiPanelEditMode="1"
                 uiPanelHeight="400"
                 uiPanelImageAlpha="255"
                 uiPanelImageLayout="64"
                 uiPanelImageResource="-- None"
                 uiPanelInvisibleComponentAlpha="0.5"
                 uiPanelLock="0"
                 uiPanelMidiToolbarVisible="0"
                 uiPanelPropertiesOnRight="0"
                 uiPanelPropertiesSize="318"
                 uiPanelSnapActive="1"
                 uiPanelSnapSize="8"
                 uiPanelTooltipBackgroundColour="0xffeeeebb"
                 uiPanelTooltipColour="0xff000000"
                 uiPanelTooltipCornerRound="1"
                 uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;0;3"
                 uiPanelTooltipOutlineColour="0xff000000"
                 uiPanelTooltipPlacement="2"
                 uiPanelViewPortSize="1274"
                 uiPanelWidth="400"
                 uiPanelZoom="0.8">
    <uiPanelCanvasLayer uiPanelCanvasLayerColour="0x000000"
                        uiPanelCanvasLayerIndex="0"
                        uiPanelCanvasLayerName="New layer"
                        uiPanelCanvasLayerUid="1f9e1c243302000080fa4200a8000000"
                        uiPanelCanvasLayerVisibility="1" />
  </uiPanelEditor>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName=""
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="1157 8 380 691"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Common"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="C
o
m
m
o
n"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-1">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;1;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;1;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName=""
               componentGroupped="0"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;1;0;0;0;0;0;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="16 10 218 932"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="L
a
y
e
r
1"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-2">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName=""
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="176 16 150 691"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="L
a
y
e
r
2"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-3">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName=""
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="336 16 150 691"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="L
a
y
e
r
3"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="Arpeggiator">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;1;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="189 5 184 158"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Arpeggiator"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="topRight"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-2"
             vstIndex="361">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="16 24 41 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName=""
               uiButtonColourOff="0xff4364ff"
               uiButtonColourOn="0xff0000ff"
               uiButtonConnectedBottom="0"
               uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0"
               uiButtonConnectedTop="0"
               uiButtonContent="Off
On"
               uiButtonFalseValue="0"
               uiButtonIsToggle="0"
               uiButtonRepeat="0"
               uiButtonRepeatRate="100"
               uiButtonTextColourOff="0xff454545"
               uiButtonTextColourOn="0xff000000"
               uiButtonTriggerOnMouseDown="0"
               uiButtonTrueValue="1"
               uiType="uiButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-4"
             vstIndex="362">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="16 72 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="modulator-4"
               uiButtonColourOff="0xff0000ff"
               uiButtonFalseValue="0"
               uiButtonTextColourOn="0xff000000"
               uiButtonTrueValue="1"
               uiToggleButtonText="Hold"
               uiType="uiToggleButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-6"
             vstIndex="363">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="16 96 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="modulator-4"
               uiButtonColourOff="0xff0000ff"
               uiButtonFalseValue="0"
               uiButtonTextColourOn="0xff000000"
               uiButtonTrueValue="1"
               uiToggleButtonText="Split"
               uiType="uiToggleButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-7"
             vstIndex="364">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="16 120 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="modulator-4"
               uiButtonColourOff="0xff0000ff"
               uiButtonFalseValue="0"
               uiButtonTextColourOn="0xff000000"
               uiButtonTrueValue="1"
               uiToggleButtonText="MIDI"
               uiType="uiToggleButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-5"
             vstIndex="365">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="80 24 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Type"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-9"
             vstIndex="366">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="80 64 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Sub divide"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154"
             vstIndex="367">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="Arpeggiator"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="88 96 76 57"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Tempo"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-7">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="32 5 150 99"
               componentSentBack="1"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Portamento"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-10"
             vstIndex="368">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-7"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="16 32 41 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName=""
               uiButtonColourOff="0xff4364ff"
               uiButtonColourOn="0xff0000ff"
               uiButtonConnectedBottom="0"
               uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0"
               uiButtonConnectedTop="0"
               uiButtonContent="Off
On"
               uiButtonFalseValue="0"
               uiButtonIsToggle="0"
               uiButtonRepeat="0"
               uiButtonRepeatRate="100"
               uiButtonTextColourOff="0xff454545"
               uiButtonTextColourOn="0xff000000"
               uiButtonTriggerOnMouseDown="0"
               uiButtonTrueValue="1"
               uiType="uiButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-1"
             vstIndex="369">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-7"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="64 32 76 57"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-8">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 168 367 150"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Reverb"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-9">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 320 367 150"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Chorus"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-10">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 472 367 150"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Variation"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-11"
             vstIndex="370">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="80 8 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Type"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-12"
             vstIndex="371">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-9"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="66 37 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Type"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-13"
             vstIndex="372">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-10"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="60 29 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Type"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-2"
             vstIndex="373">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="5 48 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-3"
             vstIndex="374">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="60 48 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-4"
             vstIndex="375">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="168 48 60 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-5"
             vstIndex="376">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="112 48 60 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-6"
             vstIndex="377">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-11"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="0 0 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-7"
             vstIndex="378">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="233 5 60 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Pan"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-8"
             vstIndex="379">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="176 4 60 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Return"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-11">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-8"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="272 72 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="ffffffff"
               uiGroupBackgroundColour2="ffffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="a3a3a3"
               uiGroupOutlineColour2="a3a3a3"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText=""
               uiGroupTextColour="ffffff"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-9"
             vstIndex="380">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="277 629 76 57"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Master Volume"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-10"
             vstIndex="381">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-9"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="217 30 60 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Pan"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-11"
             vstIndex="382">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-9"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="165 21 60 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Return"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-15"
             vstIndex="384">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="40 42 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Patch"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-16"
             vstIndex="385">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="40 5 88 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Voice Bank"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-17"
             vstIndex="386">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="149 5 41 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName=""
               uiButtonColourOff="0xff4364ff"
               uiButtonColourOn="0xff0000ff"
               uiButtonConnectedBottom="0"
               uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0"
               uiButtonConnectedTop="0"
               uiButtonContent="Mono
Poly"
               uiButtonFalseValue="0"
               uiButtonIsToggle="0"
               uiButtonRepeat="0"
               uiButtonRepeatRate="100"
               uiButtonTextColourOff="0xff454545"
               uiButtonTextColourOn="0xff000000"
               uiButtonTriggerOnMouseDown="0"
               uiButtonTrueValue="1"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiType="uiButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-12"
             vstIndex="387">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="141 42 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Note Shift"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-13"
             vstIndex="388">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="20 79 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Detune"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-14"
             vstIndex="389">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="80 79 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Volume"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-15"
             vstIndex="390">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-15"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="71 25 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Sens Offs"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-16"
             vstIndex="391">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-15"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="12 25 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Sens Depth"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-17"
             vstIndex="392">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="144 312 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Vari Send"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;0;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-18"
             vstIndex="393">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 311 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Chorus Send"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-19"
             vstIndex="394">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="144 107 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Pan"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-20"
             vstIndex="395">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="80 311 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Reverb Send"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-18"
             vstIndex="396">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="144 172 53 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="H Limit"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="-1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="-1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-19"
             vstIndex="397">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="144 252 52 32"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="L Limit"
               uiComboArrowColour="0xff0000ff"
               uiComboBgColour="0xffffffff"
               uiComboButtonColour="0xff0000ff"
               uiComboButtonGradient="0"
               uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b"
               uiComboButtonWidth="16"
               uiComboButtonWidthOverride="0"
               uiComboContent=""
               uiComboDynamicContent="0"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuBackgroundRibbed="1"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboMenuFontColour="0xff000000"
               uiComboMenuFontHighlightedColour="0xff232323"
               uiComboMenuHighlightColour="ffadd8e6"
               uiComboOutlineColour="0xff0000ff"
               uiComboSelectedId="-1"
               uiComboSelectedIndex="-1"
               uiComboTextColour="0xff000000"
               uiComboTextJustification="centred"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiType="uiCombo" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="1"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="1"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="modulator-20"
             vstIndex="398">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula=""
          midiMessageType="9" />
    <component componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="centred"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="144 616 62 47"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="LFO Sync"
               uiButtonColourOff="0xff4364ff"
               uiButtonColourOn="0xff0000ff"
               uiButtonConnectedBottom="0"
               uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0"
               uiButtonConnectedTop="0"
               uiButtonContent="Freerun
Retrigger
-"
               uiButtonFalseValue="0"
               uiButtonIsToggle="0"
               uiButtonRepeat="0"
               uiButtonRepeatRate="100"
               uiButtonTextColourOff="0xff454545"
               uiButtonTextColourOn="0xff000000"
               uiButtonTriggerOnMouseDown="0"
               uiButtonTrueValue="1"
               uiType="uiButton" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-21"
             vstIndex="399">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 385 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Filter Cutoff"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-22"
             vstIndex="400">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="80 385 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Filter Res"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-23"
             vstIndex="401">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="1952 -16 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Filter Res"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-24"
             vstIndex="402">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 680 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Filter Cutoff"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;0;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-12">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 448 200 84"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Amp Envelope"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-25"
             vstIndex="403">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-12"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="0 24 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Attack"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-26"
             vstIndex="404">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-12"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="48 24 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Decay"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-27"
             vstIndex="405">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-12"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="145 24 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Release"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-28"
             vstIndex="406">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-12"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="95 24 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Sustain"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-29"
             vstIndex="407">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 544 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="LFO Speed"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-30"
             vstIndex="408">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="72 544 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="LFO Wave"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-31"
             vstIndex="409">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="144 544 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="LFO A Dep"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-32"
             vstIndex="410">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 608 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="LFO P Dep"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-33"
             vstIndex="411">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="72 608 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="LFO F Dep"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-13">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 680 200 84"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Filter Envelope"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;14;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-34"
             vstIndex="412">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-13"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="50 26 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Decay"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-35"
             vstIndex="413">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-13"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="2 26 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Attack"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-36"
             vstIndex="414">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-13"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="98 26 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Sustain"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-37"
             vstIndex="415">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-13"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="149 26 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Release"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-14">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 772 199 149"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Pitch Envelope"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;14;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-38"
             vstIndex="416">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-14"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="8 83 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Init Lvl"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-39"
             vstIndex="417">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-15"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="0"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="12 80 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Limit Low"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="1"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulatorSource="1"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="0"
             modulatorVstNameFormat="%n"
             name="CommonUpper-15">
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="0"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="5 144 129 133"
               componentSentBack="0"
               componentSnapSize="0"
               componentTabId="0"
               componentTabName="tabs"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Layer 1"
               uiGroupBackgroundColour1="a3a3a3"
               uiGroupBackgroundColour2="ffffff"
               uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage=""
               uiGroupBackgroundImageAlpha="255"
               uiGroupBackgroundImageLayout="36"
               uiGroupOutlineColour1="8c000000"
               uiGroupOutlineColour2="ff262626"
               uiGroupOutlineGradientType="1"
               uiGroupOutlineRoundAngle="8"
               uiGroupOutlineThickness="2"
               uiGroupText="Velocity"
               uiGroupTextColour="6c000000"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiGroupTextMargin="0"
               uiGroupTextPlacement="top"
               uiType="uiGroup" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-40"
             vstIndex="418">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-1"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="1"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="142 312 60 60"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Vari Send"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-41"
             vstIndex="419">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-15"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="0"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="71 78 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Limit High"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-42"
             vstIndex="420">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-14"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="53 25 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Att Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-43"
             vstIndex="421">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-14"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="53 83 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Att Lvl"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-44"
             vstIndex="422">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-14"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="101 25 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Dec Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-45"
             vstIndex="423">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-14"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="150 25 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Rel Time"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <modulator luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None"
             luaModulatorValueChange="-- None"
             modulatorBaseValue="0"
             modulatorControllerExpression="value"
             modulatorCustomIndex="0"
             modulatorCustomIndexGroup="0"
             modulatorCustomName=""
             modulatorCustomNameGroup=""
             modulatorExcludeFromSnapshot="0"
             modulatorGlobalVariable="-1"
             modulatorIsStatic="0"
             modulatorLinkedToComponent="0"
             modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulatorSource="1"
             modulatorLinkedToPanelProperty="-- None"
             modulatorMax="100"
             modulatorMin="0"
             modulatorMute="0"
             modulatorMuteOnStart="0"
             modulatorValue="0"
             modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue"
             modulatorVstExported="1"
             modulatorVstNameFormat="%n"
             name="Voice154-46"
             vstIndex="424">
    <midi midiMessageChannel="1"
          midiMessageChannelOverride="0"
          midiMessageCtrlrNumber="1"
          midiMessageCtrlrValue="0"
          midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 14 12 00 01 1A xx z4 F7"
          midiMessageType="5" />
    <component componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1"
               componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleNameJustification="centred"
               componentBubbleRoundAngle="10"
               componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred"
               componentDisabled="0"
               componentEffect="0"
               componentEffectColour="0xff000000"
               componentEffectOffsetX="0"
               componentEffectOffsetY="0"
               componentEffectRadius="1"
               componentExcludedFromLabelDisplay="0"
               componentGroupName="CommonUpper-14"
               componentGroupped="1"
               componentIsLocked="0"
               componentLabelAlwaysOnTop="1"
               componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLabelHeight="14"
               componentLabelJustification="center"
               componentLabelPosition="top"
               componentLabelVisible="1"
               componentLabelWidth="0"
               componentLayerUid="1f9e1c243302000080fa4200a8000000"
               componentLuaMouseMoved="-- None"
               componentMouseCursor="2"
               componentRadioGroupId="0"
               componentRadioGroupNotifyMidi="1"
               componentRectangle="151 83 50 50"
               componentSentBack="0"
               componentSnapSize="0"
               componentValueDecimalPlaces="0"
               componentVisibility="1"
               componentVisibleName="Rel Lvl"
               uiGroupTextFont="&lt;Sans-Serif&gt;;22;1;1;0;0;1;3"
               uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0"
               uiSliderIncDecButtonColour="0xFF89A997"
               uiSliderIncDecTextColour="0xffffffff"
               uiSliderInterval="1"
               uiSliderMax="100"
               uiSliderMin="0"
               uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0"
               uiSliderRotaryFillColour="ff000000"
               uiSliderRotaryOutlineColour="ff000000"
               uiSliderSpringMode="0"
               uiSliderSpringValue="0"
               uiSliderStyle="RotaryVerticalDrag"
               uiSliderThumbColour="0xffff0000"
               uiSliderThumbCornerSize="3"
               uiSliderThumbFlatOnBottom="0"
               uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0"
               uiSliderThumbHeight="0"
               uiSliderThumbWidth="0"
               uiSliderTrackColour="0xff0f0f0f"
               uiSliderTrackCornerSize="5"
               uiSliderValueBgColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiSliderValueHeight="12"
               uiSliderValueHighlightColour="0xFF89A997"
               uiSliderValueOutlineColour="0xffffffff"
               uiSliderValuePosition="4"
               uiSliderValueTextColour="0xff000000"
               uiSliderValueTextJustification="centred"
               uiSliderValueWidth="64"
               uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1"
               uiSliderVelocityOffset="0"
               uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1"
               uiType="uiSlider" />
  </modulator>
  <panelCustomData />
</panel>
